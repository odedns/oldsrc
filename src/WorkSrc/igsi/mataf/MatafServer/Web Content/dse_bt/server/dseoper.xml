<?xml version="1.0" encoding="UTF-8"?>
<Operations>
     <!--DWGroupDef:Test Bank Teller.Server.Operations-->
     <!-- ******************************************************************************** -->
     <!-- 		START BTF EXTENSION OPERATIONS DEFINITION SAMPLE FOR THE SERVER	        -->
     <!-- ******************************************************************************** -->
     <!-- ================================================================== -->
     <!-- 					Startup 			         	      -->
     <!-- ================================================================== -->
     <operation context="startupServerCtx" id="startupServerOp" implClass="mataf.operations.StartupBTServerOp">
          <refFormat name="csReplyFormat" refId="startupReqFmt"/>
          <refFormat name="htmlRequestFormat" refId="startupHTMLFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 					End Session		         	         	-->
     <!-- ================================================================== -->
     <operation context="endSessionServerCtx" id="endSessionServerOp"/>
     <!-- ================================================================== -->
     <!-- 		Event Manager Internal Operation. DO NOT MODIFY !!!	      -->
     <!-- ================================================================== -->
     <com.ibm.dse.base.EventManagerServerOperation
          id="eventManagerServerOperation" implClass="com.ibm.dse.base.EventManagerServerOperation"/>
     <!-- ******************************************************************************** -->
     <!-- 		END BTF OPERATIONS DEFINITION SAMPLE FOR THE SERVER	        		  -->
     <!-- ******************************************************************************** -->
     <!-- ******************************************************************************** -->
     <!-- 	START BTF CORE EXTENSIONS OPERATION DEFINITIONS FOR THE SERVER		        -->
     <!-- ******************************************************************************** -->

     <!-- ******************************************************************************** -->
     <!-- 					Agent Admin			           -->
     <!-- ******************************************************************************** -->

     <operation context="AuthorizationContext"
          id="AuthorizationOperation" implClass="com.ibm.dse.samples.aa.server.AuthorizationOperation">
          <opStep id="authorization"/>
     </operation>
     <!--Change own password operation-->
     <operation context="ChangeOwnPasswordCtx"
          id="ChangeOwnPasswordServerOp" implClass="com.ibm.dse.appl.aa.ChangeOwnPasswordServerOperation">
          <refFormat name="csReplyFormat" refId="changeOwnPasswordReplyFmt"/>
     </operation>
     <!-- Create -->
     <operation context="RightCtx" id="CreateRightServerOp" implClass="com.ibm.dse.appl.aa.CreateRightServerOperation"/>
     <operation context="RoleCtx" id="CreateRoleServerOp" implClass="com.ibm.dse.appl.aa.CreateRoleServerOperation">
          <refFormat name="csReplyFormat" refId="RoleFmt"/>
     </operation>
     <operation context="SecurityUserCtx" id="CreateUserServerOp" implClass="com.ibm.dse.appl.aa.CreateUserServerOperation">
          <refFormat name="csReplyFormat" refId="SecurityUserFmt"/>
     </operation>
     <!-- Add -->
     <operation context="RoleCtx" id="AddRightsToRoleServerOp" implClass="com.ibm.dse.appl.aa.AddRightsToRoleServerOperation">
          <refFormat name="csReplyFormat" refId="RoleFmt"/>
     </operation>
     <!-- Update -->
     <operation context="SecurityUserCtx" id="UpdateUserProfileServerOp" implClass="com.ibm.dse.appl.aa.UpdateUserProfileServerOperation">
          <refFormat name="csReplyFormat" refId="SecurityUserFmt"/>
     </operation>
     <!-- Remove -->
     <operation context="RightCtx" id="RemoveRightServerOp" implClass="com.ibm.dse.appl.aa.RemoveRightServerOperation">
          <refFormat name="csReplyFormat" refId="RightFmt"/>
     </operation>
     <operation context="RoleCtx" id="RemoveRoleServerOp" implClass="com.ibm.dse.appl.aa.RemoveRoleServerOperation">
          <refFormat name="csReplyFormat" refId="RoleFmt"/>
     </operation>
     <operation context="RoleCtx" id="RemoveRightsFromRoleServerOp" implClass="com.ibm.dse.appl.aa.RemoveRightsFromRoleServerOperation">
          <refFormat name="csReplyFormat" refId="RoleFmt"/>
     </operation>
     <operation context="SecurityUserCtx" id="RemoveUserServerOp" implClass="com.ibm.dse.appl.aa.RemoveUserServerOperation">
          <refFormat name="csReplyFormat" refId="SecurityUserFmt"/>
     </operation>
     <!-- Query -->
     <operation context="RolesCtx" id="QueryRolesServerOp" implClass="com.ibm.dse.appl.aa.QueryRolesServerOperation">
          <refFormat name="csReplyFormat" refId="RolesFmt"/>
     </operation>
     <operation context="RightsCtx" id="QueryRightsServerOp" implClass="com.ibm.dse.appl.aa.QueryRightsServerOperation">
          <refFormat name="csReplyFormat" refId="RightsFmt"/>
     </operation>
     <operation context="UserProfilesCtx" id="QueryUserProfilesServerOp" implClass="com.ibm.dse.appl.aa.QueryUserProfilesServerOperation">
          <refFormat name="csReplyFormat" refId="UserProfilesFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Electronic Journal				      -->
     <!-- ================================================================== -->
     <!-- Retrieve Schema Info operaiton-->
     <operation context="retrieveSchemaInfoServerCtx"
          id="retrieveSchemaInfoServerOp" implClass="com.ibm.dse.appl.ej.server.RetrieveSchemaInfoServerOperation">
          <refFormat name="csReplyFormat" refId="retrieveSchemaInfoRepFmt"/>
          <refFormat name="csRequestFormat" refId="retrieveSchemaInfoHTMLFmt"/>
     </operation>
     <!-- Electronic Journal Query-->
     <operation context="ejServerCtx" id="ejServerOp" implClass="com.ibm.dse.appl.ej.server.EJQueryServerOperation">
          <refFormat name="csReplyFormat" refId="ejRepFmt"/>
          <refFormat name="htmlRequestFormat" refId="ejHTMLFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 					Forwarding			         		-->
     <!-- ================================================================== -->
     <operation context="forwardCtx" id="forwardOp" implClass="com.ibm.dse.appl.forwarding.server.ForwardingServerOperation">
          <!--refFormat name=csRequestFormat refId=forwardDataRequestFormat-->
          <refFormat name="csReplyFormat" refId="forwardDataReplyFormat"/>
          <refFormat name="storeFormat" refId="storeFormat"/>
          <refFormat name="hostReceiveFormat" refId="serverMessageReplyFmt"/>
     </operation>
     <!-- ******************************************************************************** -->
     <!-- 	END BTF CORE EXTENSIONS OPERATION DEFINITIONS FOR THE SERVER		        -->
     <!-- ******************************************************************************** -->
     <!-- ******************************************************************************** -->
     <!-- 	START BTF TELLER EXTENSIONS OPERATION DEFINITIONS FOR THE SERVER		        -->
     <!-- ******************************************************************************** -->

     <!-- ******************************************************************************** -->
     <!-- 					Agent Admin			           -->
     <!-- ******************************************************************************** -->

     <!-- Forced Logon -->
     <operation context="ForcedLogonContext" id="ForcedLogonOperation" implClass="com.ibm.dse.samples.aa.server.ForcedLogonOperation">
          <!-- 0 = branch open-->
          <opStep id="queryBranchStatus" on0Do="next" on1Do="return" onOtherDo="return"/>
          <!-- 0 = user is logged off, 1 = user is logged on-->
          <opStep id="queryUserStatus" on0Do="isAuthorizedBySuper" onOtherDo="next"/>
          <opStep id="wrongUserStatusMessage" on0Do="return" onOtherDo="return"/>
          <opStep id="isAuthorizedBySuper" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="connectJournal" on0Do="next" onOtherDo="return"/>
          <opStep id="CDMOpenDBConnectionStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="initializeUserStatus" on0Do="next" onOtherDo="return"/>
          <opStep id="unpersistBranchTotals" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="forcedLogonReplyFmt"/>
     </operation>
     <!-- Logon -->
     <operation context="LogonContext" id="LogonOperation" implClass="com.ibm.dse.samples.aa.server.LogonOperation">
          <!-- 0 = user is logged off, 1 = user is logged on-->
          <!-- opStep id="checkUserStatus"/ -->
          <opStep id="queryUserStatus" on0Do="CDMOpenDBConnectionStep" onOtherDo="next"/>
          <opStep id="wrongUserStatusMessage" on0Do="return" onOtherDo="return"/>
          <opStep id="CDMOpenDBConnectionStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="wasLoggedForCurrentBusinessDay" on0Do="next" onOtherDo="return"/>
          <!-- 0 = branch already open, initialize user and skip branch open step-->
          <!-- 1 = branch closed, do branch open step-->
          <!-- opStep id="checkBranchStatus"/ -->
          <opStep id="queryBranchStatus" on0Do="changeUserBusinessDay" on1Do="isWithinOpenSchedule" onOtherDo="next"/>
          <opStep id="wrongBranchStatusMessage" on0Do="return" onOtherDo="return"/>
          <opStep id="isWithinOpenSchedule" on0Do="next" onOtherDo="return"/>
          <opStep id="changeBranchBusinessDay"/>
          <opStep id="basicBranchOpen" on0Do="next" onOtherDo="return"/>
          <opStep id="connectJournal" on0Do="next" onOtherDo="return"/>
          <opStep id="CDMInitializeXMLStep" on0Do="next" onOtherDo="return"/>
          <opStep id="branchInitialize" on0Do="next" onOtherDo="return"/>
          <!-- opStep id="branchLock" on0Do="next" onOtherDo="return"/ -->
          <!-- opStep id="queryBranchStatus2" on3Do="next" onOtherDo="return"/ -->
          <!-- opStep id="basicBranchOpen2" on0Do="next" onOtherDo="return"/ -->
          <opStep id="changeUserBusinessDay" on0Do="next" onOtherDo="return"/>
          <opStep id="initializeUserStatus" on0Do="next" onOtherDo="return"/>
          <opStep id="initializeAssignedCashDrawers" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="logonReplyFmt"/>
     </operation>
     <!-- Logoff -->
     <!-- Instead of running the branchSettlement from invoking the server operation as a step, it can be invoked   -->
     <!-- from the Branch Settlement view. The following changes are needed to make before running the Branch       -->
     <!-- Settlement view: 											       -->
     <!-- 1) Comment out the steps after the endOfDayStep1 in the LogoffOperation in the server side's dsepoper.xml -->
     <operation context="LogoffContext" id="LogoffOperation" implClass="com.ibm.dse.samples.aa.server.LogoffOperation">
          <!-- Teller End of Day Flow Steps -->
          <!-- 0 = user is logged off, 1 = user is logged on-->
          <opStep id="queryUserStatus" on0Do="next" on1Do="endOfDayStep" onOtherDo="next"/>
          <opStep id="wrongUserStatusMessage" on0Do="return" onOtherDo="return"/>
          <opStep id="endOfDayStep" on0Do="next" onOtherDo="return"/>
          <opStep id="persistBranchTotals" on0Do="next" onOtherDo="return"/>
          <opStep id="isLastAuthUserAssertion" on0Do="next" on1Do="endOfDayStep2" onOtherDo="return"/>
          <!-- The following steps are executed only if isLastAuthUserAssertion returns 0-->
          <opStep id="endOfDayStep1" on0Do="next" onOtherDo="return"/>
          <opStep id="branchSettlementStep"/>
          <opStep id="branchClose" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="closeUserServicesStep"/>
          <opStep id="CDMCloseDBConnectionStep" on0Do="return" on1Do="return" onOtherDo="return"/>
          <opStep id="disconnectJournal1" on0Do="return" on1Do="return" onOtherDo="return"/>
          <!-- STOPS HERE!! -->
          <!-- All users do the next unless cancelled above-->
          <opStep id="endOfDayStep2" on0Do="next" onOtherDo="return"/>
          <opStep id="closeUserServicesStep"/>
          <opStep id="CDMCloseDBConnectionStep2" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="disconnectJournal2" on0Do="next" onOtherDo="return"/>
          <!--opStep id="closeStore" on0Do="next" onOtherDo="return"/-->
          <refFormat name="csReplyFormat" refId="logoffReplyFmt"/>
     </operation>
     <!-- Signon -->
     <operation context="LogonContext" id="SignonOperation" implClass="com.ibm.dse.samples.aa.server.SignonOperation">
          <refFormat name="csReplyFormat" refId="logonReplyFmt"/>
     </operation>
     <!-- Signoff -->
     <operation context="LogoffContext" id="SignoffOperation" implClass="com.ibm.dse.samples.aa.server.SignoffOperation">
          <refFormat name="csReplyFormat" refId="logonReplyFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Branch Admin				         	-->
     <!-- ================================================================== -->
     <!--  Cash Settlement Operations -->
     <operation context="cashSettlementQueryCtx"
          id="cashSettlementQueryOp" implClass="com.ibm.dse.appl.to.CashSettlementQueryOperation">
          <opStep id="queryEndOfDayStep" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="QueryCashSettlementFmt"/>
     </operation>
     <operation context="cashSettlementCtx" id="cashSettlementOp" implClass="com.ibm.dse.appl.to.CashSettlementOperation">
          <refFormat name="csRequestFormat" refId="CashSettlementRequestFmt"/>
          <refFormat name="csReplyFormat" refId="cashSettlementOperRespFmt"/>
     </operation>
     <!--  End Of Business Day Operations -->
     <operation context="PostOverShortCtx" id="postOverShortOp" implClass="com.ibm.dse.appl.to.PostOverShortOperation">
          <opStep id="PostOverShortStep" on0Do="next" onOtherDo="return"/>
          <refFormat name="csRequestFormat" refId="PostOvrShrtReqFmt"/>
          <refFormat name="csReplyFormat" refId="PostOvrShrtReplyFmt"/>
     </operation>
     <operation context="TellerEODCtx" id="tellerEODOp" implClass="com.ibm.dse.appl.to.TellerEODOperation">
          <!-- Teller End of Day Flow Steps -->
          <opStep id="queryEndOfDayStep" on0Do="next" onOtherDo="return"/>
         <opStep id="endOfDayStep2" on0Do="next" onOtherDo="return"/>
         <refFormat name="csReplyFormat" refId="replyStatus"/>
     </operation>
     <operation context="TellerQueryEODCtx" id="tellerQueryEODOp" implClass="com.ibm.dse.appl.to.TellerQueryEODOperation">
          <opStep id="queryEndOfDayStep" on0Do="next" onOtherDo="return"/>
          <!--  Formats for request and reply data -->
          <refFormat name="csRequestFormat" refId="QueryEODRequestFmt"/>
          <refFormat name="csReplyFormat" refId="QueryEODReponseFmt"/>
     </operation>
     <operation context="QueryTXDrawerDataCtx" id="queryTXDrawerDataOp" implClass="com.ibm.dse.appl.to.QueryTXDrawerDataOperation">
          <!--  Formats for request and reply data -->
          <refFormat name="csRequestFormat" refId="QueryTXDrawerDataReqFmt"/>
          <refFormat name="csReplyFormat" refId="QueryTXDrawerDataReplyFmt"/>
     </operation>
     <operation context="TXPostDataCtx" id="txPostDataOp" implClass="com.ibm.dse.appl.to.TXPostDataOperation">
          <!--  Formats for request and reply data -->
          <refFormat name="csRequestFormat" refId="TXPostDataReqFmt"/>
          <refFormat name="csReplyFormat" refId="TXPostDataReplyFmt"/>
     </operation>
     <operation context="QueryTXReconcileCtx" id="queryTXReconcileOp" implClass="com.ibm.dse.appl.to.QueryTXReconcileOperation">
          <!--  Formats for request and reply data -->
          <refFormat name="csRequestFormat" refId="QueryTXRecReqFmt"/>
          <refFormat name="csReplyFormat" refId="QueryTXRecReplyFmt"/>
     </operation>
     <operation context="TXPostReconcileCtx" id="txPostReconcileOp" implClass="com.ibm.dse.appl.to.TXPostReconcileOperation">
          <!--  Formats for request and reply data -->
          <refFormat name="csRequestFormat" refId="TXPostRecReqFmt"/>
          <refFormat name="csReplyFormat" refId="TXPostRecReplyFmt"/>
     </operation>
     <opStepsKColl id="queryEndOfBusinessDay">
          <opStep id="queryEndOfBusinessDay" on0Do="next" on1Do="return" onOtherDo="return"/>
     </opStepsKColl>
     <operation context="branchSettlementServerCtx"
          id="branchSettlementServerOp" implClass="com.ibm.dse.appl.ba.BranchSettlementOperation">
          <opStep id="branchSettlementStep" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="replyHeader"/>
     </operation>
     <operation context="qryBrSttlmntCurrenciesCtx"
          id="qryBrSttlmntCurrenciesSvrOp" implClass="com.ibm.dse.appl.ba.QryBrSttlmntCurrenciesOp">
          <opStep id="qryBrSttlmntCurrenciesStep" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="queryBranchSettCurrenciesOperRespFmt"/>
     </operation>
     <operation context="queryBranchCurrenciesCtx"
          id="queryBranchCurrenciesOperation" implClass="com.ibm.dse.appl.ba.QueryBranchCurrenciesOperation">
          <opStep id="queryBranchCurrenciesStep" on0Do="next" onOtherDo="return"/>
          <refFormat name="csReplyFormat" refId="QueryBranchCurrenciesOperRespFmt"/>
     </operation>
     <!--  ================================================================== -->
     <!--     				Cash Drawer Management             	       -->
     <!--  ================================================================== -->
     <operation context="InitializeCDMCtx" id="InitializeCDMOperation" implClass="com.ibm.dse.appl.cm.server.InitializeCDMOperation">
          <refFormat name="csReplyFormat" refId="InitializeCDMReplyFmt"/>
          <opStep id="CDMInitializeXMLStep" on0Do="next" onOtherDo="return"/>
          <opStep id="CDMOpenDBConnectionStep" on0Do="return" onOtherDo="return"/>
     </operation>
     <operation context="CloseDBConnectionCtx"
          id="CloseDBConnectionOperation" implClass="com.ibm.dse.appl.cm.server.CloseDBConnectionOperation">
          <refFormat name="csReplyFormat" refId="CloseDBConnectionReplyFmt"/>
          <opStep id="CDMCloseDBConnectionStep" on0Do="return" onOtherDo="return"/>
     </operation>
     <operation context="QueryNextIdsCtx" id="QueryNextIdsOperation" implClass="com.ibm.dse.appl.cm.server.QueryNextIdsOperation">
          <refFormat name="csReplyFormat" refId="QueryNextIdsReplyFmt"/>
     </operation>
     <operation context="CreateCashDrawerCtx"
          id="CreateCashDrawerOperation" implClass="com.ibm.dse.appl.cm.server.CreateCashDrawerOperation">
          <refFormat name="csReplyFormat" refId="CreateCashDrawerReplyFmt"/>
     </operation>
     <operation context="QueryUserIdsAndUserNamesCtx"
          id="QueryUserIdsAndUserNamesOperation" implClass="com.ibm.dse.appl.cm.server.QueryUserIdsAndUserNamesOperation">
          <refFormat name="csReplyFormat" refId="QueryUserIdsAndUserNamesReplyFmt"/>
     </operation>
     <operation context="AssignCashDrawerCtx"
          id="AssignCashDrawerOperation" implClass="com.ibm.dse.appl.cm.server.AssignCashDrawerOperation">
          <refFormat name="csReplyFormat" refId="AssignCashDrawerReplyFmt"/>
     </operation>
     <operation context="QueryCashDrawersCtx"
          id="QueryCashDrawersOperation" implClass="com.ibm.dse.appl.cm.server.QueryCashDrawersOperation">
          <refFormat name="csReplyFormat" refId="QueryCashDrawersReplyFmt"/>
     </operation>
     <operation context="UnAssignCashDrawerCtx"
          id="UnAssignCashDrawerOperation" implClass="com.ibm.dse.appl.cm.server.UnAssignCashDrawerOperation">
          <refFormat name="csReplyFormat" refId="UnAssignCashDrawerReplyFmt"/>
     </operation>
     <operation context="DeleteCashDrawerCtx"
          id="DeleteCashDrawerOperation" implClass="com.ibm.dse.appl.cm.server.DeleteCashDrawerOperation">
          <refFormat name="csReplyFormat" refId="DeleteCashDrawerReplyFmt"/>
     </operation>
     <operation context="ModifyCashDrawerLocationCtx"
          id="ModifyCashDrawerLocationOperation" implClass="com.ibm.dse.appl.cm.server.ModifyCashDrawerLocationOperation">
          <refFormat name="csReplyFormat" refId="ModifyCashDrawerLocationReplyFmt"/>
     </operation>
     <operation context="QueryTrapsAndBaitsCtx"
          id="QueryTrapsAndBaitsOperation" implClass="com.ibm.dse.appl.cm.server.QueryTrapsAndBaitsOperation">
          <refFormat name="csReplyFormat" refId="QueryTrapsAndBaitsReplyFmt"/>
     </operation>
     <operation context="ModifyTrapsAndBaitsCtx"
          id="ModifyTrapsAndBaitsOperation" implClass="com.ibm.dse.appl.cm.server.ModifyTrapsAndBaitsOperation">
          <refFormat name="csReplyFormat" refId="ModifyTrapsAndBaitsReplyFmt"/>
     </operation>
     <operation context="QueryCashDrawerIdsCtx"
          id="QueryCashDrawerIdsOperation" implClass="com.ibm.dse.appl.cm.server.QueryCashDrawerIdsOperation">
          <refFormat name="csReplyFormat" refId="QueryCashDrawerIdsReplyFmt"/>
     </operation>
     <operation context="QueryBinsCtx" id="QueryBinsOperation" implClass="com.ibm.dse.appl.cm.server.QueryBinsOperation">
          <refFormat name="csReplyFormat" refId="QueryBinsReplyFmt"/>
     </operation>
     <operation context="CloseBatchCtx" id="CloseBatchOperation" implClass="com.ibm.dse.appl.cm.server.CloseBatchOperation">
          <refFormat name="csReplyFormat" refId="CloseBatchReplyFmt"/>
     </operation>
     <operation context="SetHoldoverCtx" id="SetHoldoverOperation" implClass="com.ibm.dse.appl.cm.server.SetHoldoverOperation">
          <refFormat name="csReplyFormat" refId="SetHoldoverReplyFmt"/>
     </operation>
     <operation context="QueryBatchIdsCtx" id="QueryBatchIdsOperation" implClass="com.ibm.dse.appl.cm.server.QueryBatchIdsOperation">
          <refFormat name="csReplyFormat" refId="QueryBatchIdsReplyFmt"/>
     </operation>
     <operation context="QueryBatchItemsCtx"
          id="QueryBatchItemsOperation" implClass="com.ibm.dse.appl.cm.server.QueryBatchItemsOperation">
          <refFormat name="csReplyFormat" refId="QueryBatchItemsReplyFmt"/>
     </operation>
     <operation context="QueryCashDrawerTotalsCtx"
          id="QueryCashDrawerTotalsOperation" implClass="com.ibm.dse.appl.cm.server.QueryCashDrawerTotalsOperation">
          <refFormat name="csReplyFormat" refId="QueryCashDrawerTotalsReplyFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Start Customer Session			       	-->
     <!-- ================================================================== -->
     <operation context="StartCustomerSessionCtx"
          id="StartCustomerSessionServerOp" implClass="com.ibm.dse.appl.cs.StartCustomerSessionServerOperation">
          <!--refFormat name=csRequestFormat refId=StartCustomerSessionRequestFmt-->
          <refFormat name="csReplyFormat" refId="StartCustomerSessionReplyFmt"/>
     </operation>
     <!-- End customer session operation-->
     <operation context="EndCustomerSessionCtx"
          id="EndCustomerSessionServerOp" implClass="com.ibm.dse.appl.cs.EndCustomerSessionServerOperation">
          <!--refFormat name=csRequestFormat refId=EndCustomerSessionRequestFmt-->
          <refFormat name="csReplyFormat" refId="EndCustomerSessionReplyFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Overrides	         	 	  	      	-->
     <!-- ================================================================== -->
     <operation context="overrideServerCtx" id="overrideServerOp" implClass="com.ibm.dse.appl.overrides.OverridesOperation">
          <refFormat name="csReplyFormat" refId="overrideReplyFmt"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Query Store	     	        			 	-->
     <!-- ================================================================== -->
     <operation context="queryStoreCtx" id="queryStoreOp" implClass="com.ibm.dse.samples.store.server.QueryStoreOperation">
          <refFormat name="csReplyFormat" refId="storeQueryReceiveFmt"/>
          <opStep id="queryStoreStep" on0Do="next" on1Do="return" onOtherDo="return"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Sample Transactions			         	-->
     <!-- ================================================================== -->
     <!-- ================================================================== -->
     <!-- 				Withdrawal	 	        		         	-->
     <!-- ================================================================== -->
     <operation context="serverWithdrawalCtx" id="serverWithdrawalOp" implClass="com.ibm.dse.samples.txn.server.TransactionServerOperation">
          <refFormat name="hostSendFormat" refId="withdrawalHostSendFmt"/>
          <refFormat name="hostReceiveFormat" refId="withdrawalHostReplyFmt"/>
          <refFormat name="csReplyFormat" refId="withdrawalReplyFmt"/>
          <refFormat name="csRequestFormat" refId="withdrawalRequestFmt"/>
          <!--Required for formatting an EJ KeyedCollection-->
          <refFormat name="operationToEJFormat" refId="withdrawalToEjFmt"/>
          <refFormat name="EJtoKCFormat" refId="fromWithdrawalEJFmt"/>
          <!--Required for the Foreign Exchange-->
          <refFormat name="fxRequestFormat" refId="foreignExchangeWithdrawalRequestFmt"/>
          <refFormat name="fxReplyFormat" refId="foreignExchangeReplyFmt"/>
          <!--Required for Cash Drawer Manager Update-->
          <refFormat name="cDMPrepFormat" refId="cashDrawerPrepFmt"/>
          <!--Required for Cash Drawer Manager Validation-->
          <refFormat name="CDMValidationFormat" refId="cashDrawerValidationFmt"/>
          <!--Required for the Store-->
          <refFormat name="fromTxnFormat" refId="storeWithdrawalFmt"/>
          <refFormat name="toStoreFormat" refId="storeToFmt"/>
          <refFormat name="storeFormat" refId="storeFormat"/>
          <refOpSteps refId="withdrawalTransactionFlow"/>
     </operation>
     <opStepsKColl id="withdrawalTransactionFlow">
          <opStep id="cashDrawerValidationStep" on0Do="next" on1Do="return"/>
          <opStep dataElement="compoundTransaction"
               id="complexPreTxnAssertion" onFalse="next" onTrue="transactionOperationStep"/>
          <opStep id="foreignExchange" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="createEJPrepareStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="ejCreateEntry" on0Do="next" on1Do="return"/>
          <opStep id="transactionOperationStep"
               on0Do="complexPostTxnAssertion" on1Do="storeForForward" onOtherDo="return"/>
          <!--This are here for Forward testing purposes only, to create items for the Store and EJ so they're in sync-->
          <!--opStep id="storeForForward" on0Do=next onOtherDo=return-->
          <opStep dataElement="compoundTransaction"
               id="complexPostTxnAssertion" onFalse="next" onTrue="return"/>
          <opStep id="updateEJPrepareStep" on0Do="next" on1Do="return"/>
          <opStep id="ejUpdateEntry" on0Do="next" on1Do="return"/>
          <opStep id="checkHostResponseStep" on0Do="updateAssertion"
               on1Do="updateAssertion" on2Do="returnOverrideReplyStep" onOtherDo="return"/>
          <opStep id="returnOverrideReplyStep" on0Do="return"/>
          <opStep dataElement="updateRequired" id="updateAssertion"
               onFalse="return" onTrue="next"/>
          <opStep id="withdrawalCDPrepStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="cashDrawerUpdate" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="updateOpInfoStep" on0Do="next" on1Do="return" onOtherDo="return"/>
     </opStepsKColl>
     <!-- ================================================================== -->
     <!-- 				Deposit		         			      -->
     <!-- ================================================================== -->
     <operation context="serverDepositCtx" id="serverDepositOp" implClass="com.ibm.dse.samples.txn.server.TransactionServerOperation">
          <refFormat name="csReplyFormat" refId="depositReplyFmt"/>
          <refFormat name="csRequestFormat" refId="depositRequestFmt"/>
          <refFormat name="hostSendFormat" refId="depositHostSendFmt"/>
          <refFormat name="hostReceiveFormat" refId="depositHostReplyFmt"/>
          <!--Required for formatting an EJ KeyedCollection-->
          <refFormat name="operationToEJFormat" refId="depositToEjFmt"/>
          <refFormat name="EJtoKCFormat" refId="fromDepositEJFmt"/>
          <!--Required for the Foreign Exchange-->
          <refFormat name="fxRequestFormat" refId="foreignExchangeDepositRequestFmt"/>
          <refFormat name="fxReplyFormat" refId="foreignExchangeReplyFmt"/>
          <!--Required for Cash Drawer Manager Update-->
          <refFormat name="cDMPrepFormat" refId="cashDrawerPrepFmt"/>
          <!--Required for the Store-->
          <refFormat name="fromTxnFormat" refId="storeDepositFmt"/>
          <refFormat name="toStoreFormat" refId="storeToFmt"/>
          <refFormat name="storeFormat" refId="storeFormat"/>
          <refOpSteps refId="depositTransactionFlow"/>
     </operation>
     <opStepsKColl id="depositTransactionFlow">
          <opStep dataElement="compoundTransaction"
               id="complexPreTxnAssertion" onFalse="next" onTrue="transactionOperationStep"/>
          <opStep id="foreignExchange" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="createEJPrepareStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="ejCreateEntry" on0Do="next" on1Do="return"/>
          <opStep id="transactionOperationStep"
               on0Do="complexPostTxnAssertion" on1Do="storeForForward" onOtherDo="return"/>
          <!--This are here for Forward testing purposes only, to create items for the Store and EJ so they're in sync-->
          <!--opStep id="storeForForward" on0Do=next onOtherDo=return-->
          <opStep dataElement="compoundTransaction"
               id="complexPostTxnAssertion" onFalse="next" onTrue="return"/>
          <opStep id="updateEJPrepareStep" on0Do="next" on1Do="return"/>
          <opStep id="ejUpdateEntry" on0Do="next" on1Do="return"/>
          <opStep id="checkHostResponseStep" on0Do="updateAssertion"
               on1Do="updateAssertion" on2Do="returnOverrideReplyStep" onOtherDo="return"/>
          <opStep id="returnOverrideReplyStep" on0Do="return"/>
          <opStep dataElement="updateRequired" id="updateAssertion"
               onFalse="return" onTrue="next"/>
          <opStep id="depositCDPrepStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="cashDrawerUpdate" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="updateOpInfoStep" on0Do="next" on1Do="return" onOtherDo="return"/>
     </opStepsKColl>
     <!-- ================================================================== -->
     <!-- 				Bill Payment	         			      -->
     <!-- ================================================================== -->
     <operation context="serverBillPaymentCtx" id="serverBillPaymentOp" implClass="com.ibm.dse.samples.txn.server.TransactionServerOperation">
          <refFormat name="csReplyFormat" refId="billPaymentReplyFmt"/>
          <refFormat name="csRequestFormat" refId="billPaymentRequestFmt"/>
          <refFormat name="hostSendFormat" refId="billPaymentHostSendFmt"/>
          <refFormat name="hostReceiveFormat" refId="billPaymentHostReplyFmt"/>
          <!--Required for a bill payment from an account-->
          <refFormat name="withdrawalReceiveFormat" refId="withdrawalRequestFmt"/>
          <refFormat name="withdrawalCreateFormat" refId="withdrawalRequestFmt"/>
          <refFormat name="withdrawalServiceChargeCreateFormat" refId="withdrawalServiceChargeRequestFmt"/>
          <!--Required for formatting an EJ KeyedCollection-->
          <refFormat name="operationToEJFormat" refId="bpToEjFmt"/>
          <refFormat name="EJtoKCFormat" refId="fromBPEJFmt"/>
          <!--Required for Cash Drawer Manager Update-->
          <refFormat name="cDMPrepFormat" refId="cashDrawerPrepFmt"/>
          <!--Required for the Store-->
          <refFormat name="fromTxnFormat" refId="storeBillPaymentFmt"/>
          <refFormat name="toStoreFormat" refId="storeToFmt"/>
          <refFormat name="storeFormat" refId="storeFormat"/>
          <refOpSteps refId="billPaymentFlow"/>
     </operation>
     <opStepsKColl id="billPaymentFlow">
          <opStep id="createEJPrepareStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="ejCreateEntry" on0Do="next" on1Do="return"/>
          <opStep id="billPaymentFromAccountStep" on0Do="next" on2Do="updateEJPrepareStep"/>
          <opStep id="transactionOperationStep"
               on0Do="updateEJPrepareStep" on1Do="storeForForward" on2Do="return"/>
          <!--This are here for Forward testing purposes only, to create items for the Store and EJ so they're in sync-->
          <!--opStep id="storeForForward" on0Do=next onOtherDo=return-->
          <opStep id="updateEJPrepareStep" on0Do="next" on1Do="return"/>
          <opStep id="ejUpdateEntry" on0Do="next" on1Do="return"/>
          <opStep id="checkHostResponseStep" on0Do="updateAssertion"
               on1Do="updateAssertion" on2Do="returnOverrideReplyStep" onOtherDo="return"/>
          <opStep id="returnOverrideReplyStep" on0Do="return"/>
          <opStep dataElement="updateRequired" id="updateAssertion"
               onFalse="return" onTrue="next"/>
          <opStep id="billPaymentCDPrepStep" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="cashDrawerUpdate" on0Do="next" on1Do="return" onOtherDo="return"/>
          <opStep id="updateOpInfoStep" on0Do="next" on1Do="return" onOtherDo="return"/>
     </opStepsKColl>
     <!-- ================================================================== -->
     <!-- 				Account List	         			      -->
     <!-- ================================================================== -->
     <operation context="serverAccountListCtx" id="serverAccountListOp" implClass="com.ibm.dse.samples.txn.server.TransactionServerOperation">
          <refFormat name="csReplyFormat" refId="accountListReplyFmt"/>
          <refFormat name="csRequestFormat" refId="accountListRequestFmt"/>
          <refFormat name="hostSendFormat" refId="accountListHostSendFmt"/>
          <refFormat name="hostReceiveFormat" refId="accountListHostReplyFmt"/>
          <opStep id="transactionOperationStep" on0Do="next"
               on1Do="return" onOtherDo="return"/>
     </operation>
     <!-- ================================================================== -->
     <!-- 				Account History				         	-->
     <!-- ================================================================== -->
     <operation context="serverAccountHistoryCtx"
          id="serverAccountHistoryOp" implClass="com.ibm.dse.samples.txn.server.TransactionServerOperation">
          <refFormat name="csReplyFormat" refId="accountHistoryReplyFmt"/>
          <refFormat name="csRequestFormat" refId="accountHistoryRequestFmt"/>
          <refFormat name="hostSendFormat" refId="accountHistoryHostSendFmt"/>
          <refFormat name="hostReceiveFormat" refId="accountHistoryHostReplyFmt"/>
          <opStep id="transactionOperationStep" on0Do="next"
               on1Do="return" onOtherDo="return"/>
     </operation>
     <!--/DWGroupDef-->
</Operations>
