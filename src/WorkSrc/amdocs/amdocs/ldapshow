#!/bin/sh
#############################################################################
# File  :   	ldapshow      
# Date  :	08-11-1998
# Version:	v03
# Written By:	Oded Nissan
# Purpose:
# 		a shell script to import user data from the ads system.
# 		the program ftp's all files from a specified ftp account and 
#               directory into a temporary directory.
# 		It then invokes a specified program on all of the retrieved 
#		files.
############################################################################# 



# print usage help.
help() {

	echo "Usage ldapshow [options]"
	echo " "
	echo "	-help | -h  	print this help text."
	echo "	-user  <uid>	show data for user."
	echo "	-admin <uid>	show data for admin"
	echo "	-modlog 	show modificationlog entries for the user."
}

# parse command line args.
parse_args() {

USER=""
ADMIN=""
MODLOG=0

	if [ $# -lt 2 ] ;  then 
		help
		exit 1
	fi
	while [ $# != 0 ] 
	do
		case "$1" in 
			-help) 
				help;
				exit;;
			-h)
				help;
				exit;;
			-user)
				shift
				USER=$1
				;;
			-admin)
				shift
				ADMIN=$1
				;;
			-modlog)
				MODLOG=1
				;;
			*) 	echo "invalid arg: $1"
				;;
		esac
		shift
	done
	check_vars
}


# debug print variables.
print_vars() {
	echo "ADMIN 	= $ADMIN"
	echo "USER      = $USER"
	echo "MODLOG    = $MODLOG"
}


# check_vars
# check if all required input arguments have been
# given on the command line.
check_vars() {


	if [ -z "$USER" -a  -z "$ADMIN" ]; then 
		help
		exit 1
	fi
}


search() {
	LD_LIBRARY_PATH=$LD_LIBRARY_PATH/:/users.e451/infra/ccdt/netscape/directory/lib
	export LD_LIBRARY_PATH
	LDAP_SEARCH=/users.e451/infra/ccdt/netscape/directory/bin/slapd/server/ldapsearch
	LDAP_SBASE="o=DT.com"
	LDAP_PORT=14300


	if [ -z "$USER" ]; then 
		FILTER="(&(uid=$ADMIN)(objectclass=adminsecurityperson))"
	else 
		if [ $MODLOG -eq 1 ]; then 
			FILTER="(&(uid=$USER)(objectclass=modificationlog))"
		else 
			FILTER="(&(uid=$USER)(|(objectclass=securityperson)(objectclass=bookaccount)))"
		fi
	fi
		
	echo $LDAP_SEARCH -p $LDAP_PORT -b $LDAP_SBASE $FILTER
	$LDAP_SEARCH -p $LDAP_PORT -b $LDAP_SBASE $FILTER
}

#-------------------------
# main 
#-------------------------

	parse_args $@
	print_vars
	search

