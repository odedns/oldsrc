<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by aa (aa) -->
<!--DTD generated by XMLSPY v2004 rel. 2 U (http://www.xmlspy.com)-->

<!-- Root elements -->

<!ELEMENT root (validationCheckDefinition | validationCheck | validationCheckSet | buttonSet | flowImplementations | validator | guardDefinition | structureDefinition | typeDefinition | context | contextElementSetDefinition | operationDefinition | serviceDefinition | activityDefinition | flow | formatterDefinition)*>

<!-- Generic elements -->

<!ELEMENT param EMPTY>
<!ATTLIST param
	name CDATA #REQUIRED
	value CDATA #REQUIRED
	class CDATA #REQUIRED
>

<!ELEMENT implementation EMPTY>
<!ATTLIST implementation
	name CDATA #REQUIRED
	class CDATA #REQUIRED
>


<!-- Flow definitions -->

<!ELEMENT flowImplementations (implementation*)>

<!ELEMENT flow (tabSystemData?, actionList*, state+)>
<!ATTLIST flow
	name CDATA #REQUIRED
	context CDATA #IMPLIED
	independent (true | false) #IMPLIED
	menu CDATA #IMPLIED
	defaultInternalTransitions (true | false) #IMPLIED
	validator CDATA #IMPLIED
	type (tabSystem | generic) #IMPLIED
	implementation CDATA  #IMPLIED
	authId CDATA #IMPLIED
>

<!ELEMENT tabSystemData EMPTY>
<!ATTLIST tabSystemData
	page CDATA #REQUIRED
>


<!-- Action definitions -->

<!ELEMENT action (param*)>
<!ATTLIST action
	type (operation | actionList | service) #REQUIRED
	refName CDATA #REQUIRED
	methodName CDATA #IMPLIED
	inFormatter CDATA #IMPLIED
	outFormatter CDATA #IMPLIED
	complexFormatter CDATA #IMPLIED
>

<!ELEMENT actionList (action*)>
<!ATTLIST actionList
	name CDATA #REQUIRED
>

<!-- Type Definition definitions -->

<!ELEMENT builderTypeDefinition (param*)>
<!ATTLIST builderTypeDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
>

<!ELEMENT builder EMPTY>
<!ATTLIST builder
	fromType CDATA #IMPLIED
	builderTypeName CDATA #IMPLIED
	method CDATA #REQUIRED
	class CDATA #IMPLIED
>

<!ELEMENT printer EMPTY>
<!ATTLIST printer
	builderTypeName CDATA #IMPLIED
	method CDATA #REQUIRED
	class CDATA #IMPLIED
>

<!ELEMENT builders (builder+)>

<!ELEMENT type (builders?, printer?)>
<!ATTLIST type
	name CDATA #REQUIRED
	class CDATA #REQUIRED
	xiType (true | false) #IMPLIED
	basicXIType CDATA #IMPLIED
>

<!ELEMENT typeDefinition (type | builderTypeDefinition)*>

<!-- Structure definitions -->

<!ELEMENT structureField EMPTY>
<!ATTLIST structureField
	name CDATA #REQUIRED
	type CDATA #REQUIRED
	defaultValue CDATA #IMPLIED
>

<!ELEMENT structureDefinition (structureField*)>
<!ATTLIST structureDefinition
	name CDATA #REQUIRED
>


<!-- Context definitions -->

<!ELEMENT context (service | field | contextElementSet)*>
<!ATTLIST context
	name CDATA #REQUIRED
	type (dynamic | static) #IMPLIED
	parent CDATA #IMPLIED
	addOnDemand (true | false) #IMPLIED
>

<!ELEMENT field EMPTY>
<!ATTLIST field
	name CDATA #REQUIRED
	type CDATA #REQUIRED
	childAccess (full | readOnly | none) #IMPLIED
	defaultValue CDATA #IMPLIED
>

<!ELEMENT contextElementSetDefinition (service | field)*>
<!ATTLIST contextElementSetDefinition
	name CDATA #REQUIRED
>

<!ELEMENT contextElementSet EMPTY>
<!ATTLIST contextElementSet
	contextElementSetDefName CDATA #REQUIRED
>

<!-- Formatter definitions -->

<!ELEMENT format EMPTY>
<!ATTLIST format
	fromName CDATA #IMPLIED
	fromValue CDATA #IMPLIED
	toName CDATA #REQUIRED
>

<!ELEMENT formatterDefinition (format* | param* | (inputFormatter, outputFormatter))>
<!ATTLIST formatterDefinition
	name CDATA #REQUIRED
	type (simple | custom | complex) #REQUIRED
	class CDATA #IMPLIED
>

<!ELEMENT inputFormatter (format* | param*)>
<!ATTLIST inputFormatter
	type (simple | custom) #REQUIRED
	class CDATA #IMPLIED
>

<!ELEMENT outputFormatter (format* | param*)>
<!ATTLIST outputFormatter
	type (simple | custom) #REQUIRED
	class CDATA #IMPLIED
>


<!-- ToolBar / Button definitions -->

<!ELEMENT button EMPTY>
<!ATTLIST button
	name CDATA #REQUIRED
	eventName CDATA #IMPLIED
	group CDATA #IMPLIED
	type (button | spacer) #IMPLIED
	activityType (readWrite | readOnly) #IMPLIED
	openWindowType (normal | dialog | popup | closeDialog | closePopup) #IMPLIED
	windowExtraParams CDATA #IMPLIED
	checkDirtyFlag (true | false) #IMPLIED
	checkWarnings (true | false) #IMPLIED
	checkDirtyModelIds CDATA #IMPLIED
	allowEventOnDirtyIds (true | false) #IMPLIED
	confirmMessageId CDATA #IMPLIED
	stateModelId CDATA #IMPLIED
	shortCutKey CDATA #IMPLIED
	authId CDATA #IMPLIED
>

<!ELEMENT buttonSet (button*)>
<!ATTLIST buttonSet
	name CDATA #REQUIRED
>

<!-- Service definitions -->

<!ELEMENT serviceDefinition (serviceMethod*)>
<!ATTLIST serviceDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
	defaultMethodContext CDATA #IMPLIED
	validator CDATA #IMPLIED
	activityType (readWrite | readOnly) #IMPLIED
>

<!ELEMENT serviceMethod EMPTY>
<!ATTLIST serviceMethod
	name CDATA #REQUIRED
	executionMethod CDATA #REQUIRED
	context CDATA #IMPLIED
	validator CDATA #IMPLIED
	activityType (readWrite | readOnly) #IMPLIED
>

<!ELEMENT service (param*)>
<!ATTLIST service
	name CDATA #REQUIRED
	serviceDefName CDATA #REQUIRED
>

<!-- Operation definitions -->

<!ELEMENT operationDefinition EMPTY>
<!ATTLIST operationDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
	context CDATA #IMPLIED
	validator CDATA #IMPLIED
	activityType (readWrite | readOnly) #IMPLIED
>


<!-- State definitions -->

<!ELEMENT state (subFlowData?, actionList*, entryActions?, transition*, exitActions?)>
<!ATTLIST state
	name CDATA #REQUIRED
	type (complex | simple | final) #REQUIRED
	initial (false | true) #IMPLIED
	page CDATA #IMPLIED
	activityName CDATA #IMPLIED
	context CDATA #IMPLIED
	inFormatter CDATA #IMPLIED
	outFormatter CDATA #IMPLIED
	complexFormatter CDATA #IMPLIED
	menu CDATA #IMPLIED
	validator CDATA #IMPLIED
	visible (true | false) #IMPLIED
	buttonSet CDATA #IMPLIED
	authId CDATA #IMPLIED
	waitingForEvent (true | false) #IMPLIED
	reachableByFlowOnly (true | false) #IMPLIED
>

<!ELEMENT subFlowData EMPTY>
<!ATTLIST subFlowData
	flowName CDATA #REQUIRED
	inFormatter CDATA #IMPLIED
	outFormatter CDATA #IMPLIED
	complexFormatter CDATA #IMPLIED
	goodFinalStates CDATA #IMPLIED
	formatContextOnInterrupt (false | true) #IMPLIED
>

<!ELEMENT actions (action*)>

<!ELEMENT validationExceptionActions (action*)>

<!ELEMENT validationAction (param*)>
<!ATTLIST validationAction
	refName CDATA #REQUIRED
	inFormatter CDATA #IMPLIED
	outFormatter CDATA #IMPLIED
	complexFormatter CDATA #IMPLIED
	stopOnError (true | false) #IMPLIED
>

<!ELEMENT validationActions (validationAction*)>

<!ELEMENT transition (actions?, validationExceptionActions?, validationActions?, subFlowData*)>
<!ATTLIST transition
	event CDATA #IMPLIED
	targetState CDATA #IMPLIED
	guard CDATA #IMPLIED
	customGuardName CDATA #IMPLIED
	validationGuard CDATA #IMPLIED
	internal (false | true) #IMPLIED
	default (true | false) #IMPLIED
	context CDATA #IMPLIED
	inFormatter CDATA #IMPLIED
	outFormatter CDATA #IMPLIED
	complexFormatter CDATA #IMPLIED
	validator CDATA #IMPLIED
	alternativeTargetState CDATA #IMPLIED
	handleValidationError (true | false) #IMPLIED
	traverseEvent (true | false) #IMPLIED
>

<!ELEMENT entryActions (action*)>

<!ELEMENT exitActions (action*)>

<!ELEMENT guardDefinition (param*)>
<!ATTLIST guardDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
>

<!ELEMENT activityDefinition (param*)>
<!ATTLIST activityDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
	validator CDATA #IMPLIED
	activityType (readWrite | readOnly) #IMPLIED
>


<!-- Validation / Check definitions -->

<!ELEMENT validator (param | check | checkSet)*>
<!ATTLIST validator
	name CDATA #REQUIRED
	type (complex | custom) #REQUIRED
	class CDATA #IMPLIED
>

<!ELEMENT validationCheckDefinition (checkParamDefinition*)>
<!ATTLIST validationCheckDefinition
	name CDATA #REQUIRED
	class CDATA #REQUIRED
	method CDATA #REQUIRED
>

<!ELEMENT validationCheck (checkParam*)>
<!ATTLIST validationCheck
	name CDATA #REQUIRED
	validationCheckDef CDATA #REQUIRED
>

<!ELEMENT checkParam EMPTY>
<!ATTLIST checkParam
	name CDATA #REQUIRED
	value CDATA #IMPLIED
	valueType CDATA #IMPLIED
	fieldName CDATA #IMPLIED
	caption CDATA #IMPLIED
	setFieldErrorState (true | false) #IMPLIED
>

<!ELEMENT validationCheckSet (check*)>
<!ATTLIST validationCheckSet
	name CDATA #IMPLIED
>

<!ELEMENT check (checkParam*)>
<!ATTLIST check
	validationCheckName CDATA #IMPLIED
	validationCheckDef CDATA #IMPLIED
	stopOnError (true | false) #IMPLIED
>

<!ELEMENT checkSet EMPTY>
<!ATTLIST checkSet
	validationCheckSetName CDATA #REQUIRED
>

<!ELEMENT checkParamDefinition EMPTY>
<!ATTLIST checkParamDefinition
	name CDATA #REQUIRED
	type CDATA #REQUIRED
	defaultType CDATA #IMPLIED
	multiplicity CDATA #REQUIRED
>

