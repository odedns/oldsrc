proc replaceVar { symbolicName newValue newDescription } {
  global AdminConfig
  global AdminControl
#  global aNodeName

  set aNodeName [$AdminControl getNode]
  set varMap [$AdminConfig getid /Node:$aNodeName/VariableMap:/]
  set entries [$AdminConfig list VariableSubstitutionEntry $varMap]

  foreach entry $entries {
    set l [$AdminConfig show $entry]
    set search [list symbolicName $symbolicName]
    set x [lsearch $l $search]
    if { !($x == -1) } {
      puts "Variable $symbolicName not found !" 
      $AdminConfig remove $entry
    }
  }
  set nameattr [list symbolicName $symbolicName]
  set valattr  [list value        $newValue]
  set descattr [list description  $newDescription]
  set attrs [list $nameattr $valattr $descattr]
  $AdminConfig create VariableSubstitutionEntry $varMap $attrs
  puts "Varible $symbolicName created ..." 

}

set node [$AdminControl getNode]



set hoshenProvider "HoshenProvider"
set prov [$AdminConfig getid /Node:$node/JDBCProvider:/]
set res [regexp $hoshenProvider $prov]
if { $res > 0 } {
	puts "$hoshenProvider not created: already exists"
} else {
	# Set the ORACLE_JDBC_DRIVER_PATH var
	set driverPath "c:\\oracle\\ora10g\\jdbc\\lib"
	set desc "The driver path for Oracle JDBC"
	replaceVar ORACLE_JDBC_DRIVER_PATH $driverPath $desc
	puts "Succesfully created variable"
	# now define the JDBC provider
	set jdbcProviders [$AdminConfig getid /Node:$node/JDBCProvider:/]
	set providerName [list name $hoshenProvider ]
	set type  [list providerType "Oracle JDBC Driver"]
	set cp [list classpath {${ORACLE_JDBC_DRIVER_PATH}/ojdbc14.jar} ]
	set desc [list description "Oracle JDBC Driver"]
	set implClass [list implementationClassName "oracle.jdbc.pool.OracleConnectionPoolDataSource"]
	set native [list nativepath {}]
	set xs [list xa false]

	set jdbcattr [list $providerName $type $cp $desc $implClass $native $xs]
	set JDBCTempl [$AdminConfig listTemplates JDBCProvider $type] 
	set nodeId [$AdminConfig getid /Node:$node/]
	$AdminConfig create JDBCProvider $nodeId $jdbcattr 
	puts "Succesfully created JDBCProvider: $hoshenProvider"
}

# define J2C Auth alias
set myalias "hoshenDB"
set myuser "test"
set mypass  "test"
set ent [$AdminConfig list JAASAuthData]
set i 0 
while { $i < [llength $ent] } {
	set res [lsearch [lindex  [$AdminConfig show [lindex $ent $i] ] 0] $myalias]
	if { $res > 0 } {
		break
	}
	incr i
}

if { $res > 0 } { 
	puts "$myalias not created: already exists"
} else {
	set security [$AdminConfig getid /Security:/]
	set alias [list alias $myalias]
	set userid [list userId $myuser]
	set password [list password $mypass]
	set j2cattr [list $alias $userid $password]
	$AdminConfig create JAASAuthData $security $j2cattr
	puts "Succesfully created Authenticationalias : $alias"

}
# define DataSource

set myds "HoshenJdbc"
set ds [$AdminConfig getid /Node:$node/JDBCProvider:HoshenProvider/DataSource:/]
set res [regexp $myds $ds]
if { $res > 0 } {
	puts "$myds not created:  already exists"
} else {
	set jdbcpr [$AdminConfig getid /Node:$node/JDBCProvider:$hoshenProvider/]
	set myjndi "jdbc/hoshenJdbc"
	set myauth $myalias
	set myurl "jdbc:oracle:thin:@dev190sun05:1521:hoshen"
	set myhelper "com.ibm.websphere.rsadapter.Oracle10gDataStoreHelper"
	set provider "Oracle JDBC Driver (XA)"
	set dsname [list name $myds]
	set provideratt [list providerType $provider]
	set dsattr [list $dsname $provideratt]
	set newds [$AdminConfig create DataSource $jdbcpr $dsattr]
	puts "Succesfully created DataSource : $myds"
	# now add properties
	set jndiattr [list jndiName $myjndi]
	set authattr [list authDataAlias $myauth]
	set dshelper [list datasourceHelperClassname $myhelper]
	set dsattr [list $jndiattr $authattr $dshelper]
	$AdminConfig modify $newds $dsattr
	# now add the url
	set propSet1 [$AdminConfig create J2EEResourcePropertySet $newds {}]
	set attrs3 [subst {{name URL} {type java.lang.String} {value "$myurl"}}]
	set attrs4 [subst {{name driverType} {type java.lang.String} {value "thin"}}]
	$AdminConfig create J2EEResourceProperty $propSet1 $attrs3 
	$AdminConfig create J2EEResourceProperty $propSet1 $attrs4 
	$AdminConfig save
	puts "Succesfully updated DataSource properties"
}

# set the systemProperties

set serverName "server1"
set s1 [$AdminConfig getid /Node:$node/Server:$serverName/]
set procDef [$AdminConfig list JavaProcessDef]
set jvm [$AdminConfig list JavaVirtualMachine $procDef]
$AdminConfig  modify $jvm {{systemProperties {{{description "Hebrew char set"}{name file.encoding } {required true} {value cp1255}}}}}
$AdminConfig save
puts "Updated systemProperties"

puts "Succesfully Configured server ...."
