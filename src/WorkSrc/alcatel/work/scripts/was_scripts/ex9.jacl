# This program may be used, executed, copied, modified and distributed
# without royalty for the purpose of developing, using, marketing, or distribution

#-----------------------------------------------------------------
# ex9.jacl - Jacl implementation of example script 9
#-----------------------------------------------------------------
#
#  The purpose of this example is to demonstrate the creation of a 
#  JDBCProvider, DataSource and CMPConnectorFactory objects.
#  
#  This is a bi-modal script: it can be included in the wsadmin 
#  command invocation like this:
#     
#     wsadmin -f ex9.jacl mynode "DB2 Universal JDBC Driver Provider (XA)" myds mycf sampleDB
#
#  or the script can be sourced from the wsadmin command line:
#     wsadmin> source ex9.jacl
#     wsadmin> ex9.jacl mynode "DB2 Universal JDBC Driver Provider (XA)" myds mycf sampleDB
# 
#  The script expects 5 parameters:
#    node name
#    template name for JDBCProvider 
#    datasource name to be created
#    CMP Connection factory name to be created
#    name of database 
#
#  This example demonstrates many wsadmin features:
#
#   - The use of the AdminConfig object to locate configuration objects        
#   - The use of the AdminConfig object to modify configuration objects
#   - The use of the AdminConfig object to create configuration objects 
#   - The use of the AdminConfig object to remove configuration objects 
#-----------------------------------------------------------------
#
proc ex9 {nodeName templateName dsname cfname dbname } {
  
  #--------------------------------------------------------------
  # set up globals
  #--------------------------------------------------------------
  global AdminConfig

  set CONT_ALIAS     my-containerAuth-Alias
  set DEFAULT_PRINCIPAL_MAPPING  DefaultPrincipalMapping

  #---------------------------------------------------------
  # Get the config id for a JDBC Template
  # Use "lindex" in case there is more than one matching templates -- we
  # just get the first one. 
  #---------------------------------------------------------
  puts "ex9: getting the JDBCProvider template whose name is $templateName" 
  set template [lindex [$AdminConfig listTemplates JDBCProvider $templateName] 0]
  if {[llength $template] == 0} {
     puts "ex9: could not find a JDBCProvider template using $templateName"
     return
  } 

  #---------------------------------------------------------
  # Get the config id for the node 
  #---------------------------------------------------------
  puts "ex9: getting the confid id for node $nodeName" 
  set node [$AdminConfig getid /Node:$nodeName/]
  if {[llength $node] == 0} {
     puts "ex9: could not find node $nodeName" 
     return
  } 

  #---------------------------------------------------------
  # Create a new JDBCProvider using this template 
  #---------------------------------------------------------
  puts "ex9: create a new JDBCProvider object named $templateName" 
  set name_attr [list name $templateName]
  set attrs [list $name_attr]
  set new1 [$AdminConfig createUsingTemplate JDBCProvider $node  $attrs $template]
  puts "the new1 is: $new1"
  #---------------------------------------------------------
  # For this example, we do not need the WAS40DataSource object, but
  # we do want to modify the DataSource object. 
  # Note that the template for this JDBCProvider does not give
  # names to the WAS40DataSource and DataSource objects associated with
  # it.  We can use "getid" to retrieve ids for objects that do not have
  # names as shown below.
  #---------------------------------------------------------
  puts "ex9: remove the WAS40DataSource object created via the template"
  set was40ds [$AdminConfig getid /JDBCProvider:$templateName/WAS40DataSource:/]
  puts "was40ds $was40ds"
  $AdminConfig remove $was40ds
   
  #--------------------------------------------------------------
  # Modify the DataSource - give it a name and a jndiName, and remove 
  # existing properties created by the template
  # A collection of objects (such as the resourceProperties attribute of the
  # propertySet attribute) can only be added to.  To completely replace
  # the collection you need to delete the old one first.
  #--------------------------------------------------------------
  puts "ex9: modify the datasource object -- name, jndiName; remove old properties."
  set ds [$AdminConfig getid /JDBCProvider:$templateName/DataSource:/]
  puts "ds $ds"
  set name_attr     [list name $dsname]
  set jndiName_attr [list jndiName jdbc/$dsname]
  set ps_attr       [list propertySet {}]
  set attrs [list $name_attr $jndiName_attr $ps_attr]
  $AdminConfig modify $ds $attrs
   
  #--------------------------------------------------------------
  # Add desired properties to the DataSource.
  #--------------------------------------------------------------
  puts "ex9: modify the datasource object -- name, jndiName, properties."
  set dbname_attr   [list [list name databaseName] [list value $dbname] [list type java.lang.String] [list description "This is a required property"]]
  set desc_attr     [list [list name description]  [list value ""] [list type java.lang.String]] 
  set password_attr [list [list name password] [list value ""] [list type java.lang.String]]
  set connattr_attr [list [list name connectionAttribute] [list value 0] [list type java.lang.String]]
  set loginTO_attr  [list [list name loginTimeout] [list value 0] [list type java.lang.Integer]]
  set newprops      [list $dbname_attr $desc_attr $password_attr $connattr_attr $loginTO_attr]
  set resprops      [list resourceProperties $newprops]
  set ps_attr       [list propertySet [list $resprops]]
  set attrs [list $ps_attr]
  $AdminConfig modify $ds $attrs
   
  #--------------------------------------------------------------
  # Modify the DataSource to give it a relational resource adapter.
  # We use the built-in rra on the node. 
  #--------------------------------------------------------------
  puts "ex9: modify the datasource object -- relationalResourceAdapter" 
  set rra      [$AdminConfig getid "/Node:$nodeName/J2CResourceAdapter:WebSphere Relational Resource Adapter/"]
  set rra_attr [list relationalResourceAdapter $rra]
  set attrs    [list $rra_attr]
  $AdminConfig modify $ds $attrs
   
  #---------------------------------------------------------
  # Create a CMPConnectorFactory, using the datasource from earlier 
  #---------------------------------------------------------
  puts "ex9: create a new CMPConnectorFactory object named $cfname" 
  set name_attr     [list name $cfname]
  set authmech_attr [list authMechanismPreference BASIC_PASSWORD]
  set cmpds_attr    [list cmpDatasource $ds]
  set p_trans_res   [list [list name TransactionResourceRegistration] [list type java.lang.String] [list value dynamic] [list description "Type of transaction resource registration (enlistment). Valid values are either static (immediate) or dynamic (deferred)."]] 
  set newprops      [list $p_trans_res]
  set resprops      [list resourceProperties $newprops]
  set ps_attr       [list propertySet [list $resprops]]
  set map_auth_attr [list authDataAlias $CONT_ALIAS] 
  set map_configalias_attr [list mappingConfigAlias $DEFAULT_PRINCIPAL_MAPPING] 
  set map_attrs     [list $map_auth_attr $map_configalias_attr]
  set mapping_attr  [list mapping $map_attrs]
  set attrs         [list $name_attr $authmech_attr $cmpds_attr $ps_attr $mapping_attr]
  set newcf [$AdminConfig create CMPConnectorFactory $rra  $attrs]

  #--------------------------------------------------------------
  # Save all the changes 
  #--------------------------------------------------------------
  puts "ex9: saving the configuration"
  $AdminConfig save

}
 

#-----------------------------------------------------------------
# Main
#-----------------------------------------------------------------
if { !($argc == 5) } {
   puts "ex9: this script requires 5 parameters: " 
   puts "       1) the name of the node under which to create resources,"
   puts "       2) the name of a JDBCProvider template to use,"
   puts "       3) the name of a datasource to create,"
   puts "       4) the name of the the CMPConnectionFactory to create,"
   puts "       5) and the name of the database to use."
   puts ""
   puts "e.g.:     ex9 mynode \"DB2 Universal JDBC Driver Provider (XA)\" myds mycf sampleDB"
} else { 
   set nodeName      [lindex $argv 0]  
   set templateName  [lindex $argv 1]  
   set dsname        [lindex $argv 2]  
   set cfname        [lindex $argv 3]  
   set dbname        [lindex $argv 4]  
   ex9 $nodeName $templateName $dsname $cfname $dbname
}