package hoshen.xsm.lightsoft.corba.CosTrading;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/OfferIdIteratorPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:18 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This interface supports operations to iterate through
 * lists of OfferIds returned by the CosTrading::Admin
 * interface.
 */
public abstract class OfferIdIteratorPOA extends org.omg.PortableServer.Servant
                implements hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorOperations, org.omg.CORBA.portable.InvokeHandler
{

  public hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIterator _this() {
     return hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.narrow(
        super._this_object());
  }

  public hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIterator _this(org.omg.CORBA.ORB orb) {
     return hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/OfferIdIterator:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("max_left", new java.lang.Integer (0));
    _methods.put ("next_n", new java.lang.Integer (1));
    _methods.put ("destroy", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /** This operation returns the number of remaining
 * OfferIds contained within the iterator.
 *
 * @returns - The number of remaining OfferIds.
 * @raises UnknownMaxLeft - If the number of remaining OfferIds
 *                          cannot be determined. 
 */
       case 0:  // CosTrading/OfferIdIterator/max_left
       {
         try {
           int __result = (int)0;
           __result = this.max_left ();
           out = $rh.createReply();
           out.write_ulong (__result);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.UnknownMaxLeft __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.UnknownMaxLeftHelper.write (out, __ex);
         }
         break;
       }


  /** This operation returns up to a specified number
 * of remaining OfferIDs.
 *
 * @param n - The number of OfferIds to return.
 * @param ids - The sequence of returned OfferIds.
 * @returns - TRUE if there are more OfferIds to retrieve.
 */
       case 1:  // CosTrading/OfferIdIterator/next_n
       {
         int n = in.read_ulong ();
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ();
         boolean __result = false;
         __result = this.next_n (n, ids);
         out = $rh.createReply();
         out.write_boolean (__result);
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHelper.write (out, ids.value);
         break;
       }


  /** This operation destroys the OfferIDIterator and
 * and any OfferIds it contains. This should be called
 * after a client has finished with the iterator.
 */
       case 2:  // CosTrading/OfferIdIterator/destroy
       {
         this.destroy ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _OfferIdIteratorPOA
