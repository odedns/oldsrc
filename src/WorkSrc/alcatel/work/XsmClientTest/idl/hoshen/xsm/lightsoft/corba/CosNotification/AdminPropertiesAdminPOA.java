package hoshen.xsm.lightsoft.corba.CosNotification;


/**
* hoshen/xsm/lightsoft/corba/CosNotification/AdminPropertiesAdminPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosNotification.idl
* 13:10:58 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
    * An interface for objects that have administrative settings.
    */
public abstract class AdminPropertiesAdminPOA extends org.omg.PortableServer.Servant
                implements hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdminOperations, org.omg.CORBA.portable.InvokeHandler
{

  public hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdmin _this() {
     return hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdminHelper.narrow(
        super._this_object());
  }

  public hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdmin _this(org.omg.CORBA.ORB orb) {
     return hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdminHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosNotification/AdminPropertiesAdmin:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("get_admin", new java.lang.Integer (0));
    _methods.put ("set_admin", new java.lang.Integer (1));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
       * Returns the current administrative settings for this object.
       * @returns A sequence of name-value pairs defining the administrative 
       * settings.
       */
       case 0:  // CosNotification/AdminPropertiesAdmin/get_admin
       {
         hoshen.xsm.lightsoft.corba.CosNotification.Property __result[] = null;
         __result = this.get_admin ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosNotification.PropertySeqHelper.write (out, __result);
         break;
       }


  /**
       * Sets the administrative settings for this object.
       * @parm <code>admin</code> - A sequence of desired name-value pairs
       * defining the administrative settings.
       * @raises UnsupportedAdmin If any of the desired setting are not
       * available.
       */
       case 1:  // CosNotification/AdminPropertiesAdmin/set_admin
       {
         try {
           hoshen.xsm.lightsoft.corba.CosNotification.Property admin[] = hoshen.xsm.lightsoft.corba.CosNotification.PropertySeqHelper.read (in);
           this.set_admin (admin);
           out = $rh.createReply();
         } catch (hoshen.xsm.lightsoft.corba.CosNotification.UnsupportedAdmin __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosNotification.UnsupportedAdminHelper.write (out, __ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _AdminPropertiesAdminPOA
