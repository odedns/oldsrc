package hoshen.xsm.lightsoft.corba.CosNotifyComm;


/**
* hoshen/xsm/lightsoft/corba/CosNotifyComm/StructuredPullSupplierPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosNotifyComm.idl
* 13:11:11 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
    * An interface for structured pull suppliers.
    */
public class StructuredPullSupplierPOATie extends StructuredPullSupplierPOA
{

  private hoshen.xsm.lightsoft.corba.CosNotifyComm.StructuredPullSupplierOperations _delegate;
  private org.omg.PortableServer.POA _poa;
  // Constructors
  public StructuredPullSupplierPOATie (hoshen.xsm.lightsoft.corba.CosNotifyComm.StructuredPullSupplierOperations delegate) {
     this._delegate = delegate;
  }

  public StructuredPullSupplierPOATie (hoshen.xsm.lightsoft.corba.CosNotifyComm.StructuredPullSupplierOperations delegate,
     org.omg.PortableServer.POA poa) {
     this._delegate = delegate;
     this._poa = poa;
  }

  public hoshen.xsm.lightsoft.corba.CosNotifyComm.StructuredPullSupplierOperations _delegate() {
     return this._delegate;
  }

  public void _delegate(
     hoshen.xsm.lightsoft.corba.CosNotifyComm.StructuredPullSupplierOperations delegate) {
     this._delegate = delegate;
  }

  public org.omg.PortableServer.POA _default_POA() {
     if(_poa != null) {
        return _poa;
     } else {
        return super._default_POA();
     }
  }


  /**
       * Pull a structured event from this supplier
       * @returns The structured event.
       * @raises Disconnected If this supplier is disconnected.
       */
  public hoshen.xsm.lightsoft.corba.CosNotification.StructuredEvent pull_structured_event () throws hoshen.xsm.lightsoft.corba.CosEventComm.Disconnected
  {
    return _delegate.pull_structured_event();
  } // pull_structured_event


  /**
       * Try to pull a structured event from this supplier.
       * @parm <code>has_event</code> - boolean indicating if supplier has
       * an event.
       * @returns The structured event if has_event is true.
       * @raises Disconnected If this supplier is disconnected.
       */
  public hoshen.xsm.lightsoft.corba.CosNotification.StructuredEvent try_pull_structured_event (org.omg.CORBA.BooleanHolder has_event) throws hoshen.xsm.lightsoft.corba.CosEventComm.Disconnected
  {
    return _delegate.try_pull_structured_event(has_event);
  } // try_pull_structured_event


  /**
       * Disconnect this pull supplier.
       */
  public void disconnect_structured_pull_supplier ()
  {
    _delegate.disconnect_structured_pull_supplier();
    return;
  } // disconnect_structured_pull_supplier


  /**
       * Indicates that a consumer is changing the names of the types of
       * events it is subscribed to.
       * @parm <code>added</code> - The event types added.
       * @parm <code>removed</code> - The event types removed.
       * @raises InvalidEventType If any of the event type names in either 
       * the of the input sequences are invalid.
       */
  public void subscription_change (hoshen.xsm.lightsoft.corba.CosNotification.EventType[] added, hoshen.xsm.lightsoft.corba.CosNotification.EventType[] removed) throws hoshen.xsm.lightsoft.corba.CosNotifyComm.InvalidEventType
  {
    _delegate.subscription_change(added, removed);
    return;
  } // subscription_change


} // class StructuredPullSupplierPOATie
