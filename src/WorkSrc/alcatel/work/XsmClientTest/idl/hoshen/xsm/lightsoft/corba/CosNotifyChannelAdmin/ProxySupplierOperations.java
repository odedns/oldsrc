package hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin;


/**
* hoshen/xsm/lightsoft/corba/CosNotifyChannelAdmin/ProxySupplierOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosNotifyChannelAdmin.idl
* 13:11:03 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
    * An interface for proxy suppliers.
    */
public interface ProxySupplierOperations  extends hoshen.xsm.lightsoft.corba.CosNotification.QoSAdminOperations, hoshen.xsm.lightsoft.corba.CosNotifyFilter.FilterAdminOperations
{

  /**
       * The type of this proxy.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ProxyType MyType ();

  /**
       * The administration object that created this proxy.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ConsumerAdmin MyAdmin ();

  /**
       * A mapping filter which if a non-nil reference will be consulted 
       * for resolving the priority of the event.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyFilter.MappingFilter priority_filter ();

  /**
       * A mapping filter which if a non-nil reference will be consulted 
       * for resolving the priority of the event.
       */
  void priority_filter (hoshen.xsm.lightsoft.corba.CosNotifyFilter.MappingFilter newPriority_filter);

  /**
       * A filter which if a non-nil reference will be consulted 
       * for resolving the priority of the event.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyFilter.MappingFilter lifetime_filter ();

  /**
       * A filter which if a non-nil reference will be consulted 
       * for resolving the priority of the event.
       */
  void lifetime_filter (hoshen.xsm.lightsoft.corba.CosNotifyFilter.MappingFilter newLifetime_filter);

  /**
       * Get a list of event type names that this proxy can potentially
       * forward to its associated consumers.
       * @parm <code>mode</code> - The mode of type retrieval.
       * @returns A sequence of event type names.
       */
  hoshen.xsm.lightsoft.corba.CosNotification.EventType[] obtain_offered_types (hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ObtainInfoMode mode);

  /**
       * Validate whether or not this proxy can honour the specified 
       * quality of service requirements.
       * @parm <code>required_qos</code> - Quality of service name-value
       * pairs which a client is interested in validating.
       * @parm <code>available_qos</code> - Quality of service settings that
       * this proxy can support in addition to the ones in the input sequence.
       * @raises UnsupportedQoS If any of the quality of service settings
       * in the input sequence could not be honoured.
       */
  void validate_event_qos (hoshen.xsm.lightsoft.corba.CosNotification.Property[] required_qos, hoshen.xsm.lightsoft.corba.CosNotification.NamedPropertyRangeSeqHolder available_qos) throws hoshen.xsm.lightsoft.corba.CosNotification.UnsupportedQoS;
} // interface ProxySupplierOperations
