package hoshen.xsm.lightsoft.corba.CosTrading;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/AdminOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:22 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This interface is used to manage the various policies
 * and constraints applied by the trader.
 */
public interface AdminOperations  extends hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations, hoshen.xsm.lightsoft.corba.CosTrading.SupportAttributesOperations, hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations, hoshen.xsm.lightsoft.corba.CosTrading.LinkAttributesOperations
{
  byte[] request_id_stem ();

  /* This operation sets the default search cardinality applied to queries. 
 *
 * @returns - The previous default search cardinality.
 * @param value - The new default serach cardinality.
 */
  int set_def_search_card (int value);

  /* This operation sets the maximum search cardinality applied to queries. 
 *
 * @returns - The previous maximum search cardinality.
 * @param value - The new maximum search cardinality.
 */
  int set_max_search_card (int value);

  /* This operation sets the default match cardinality applied to queries. 
 *
 * @returns - The previous default match cardinality.
 * @param value - The new default match cardinality.
 */
  int set_def_match_card (int value);

  /* This operation sets the maximum match cardinality applied to queries. 
 *
 * @returns - The previous maximum match cardinality.
 * @param value - The new maximum match cardinality.
 */
  int set_max_match_card (int value);

  /* This operation sets the default return cardinality applied to queries. 
 *
 * @returns - The previous default return cardinality.
 * @param value - The new default return cardinality.
 */
  int set_def_return_card (int value);

  /* This operation sets the maximum return cardinality applied to queries. 
 *
 * @returns - The previous maximum return cardinality.
 * @param value - The new maximum return cardinality.
 */
  int set_max_return_card (int value);

  /* This operation sets the maximum size for an iterator. 
 *
 * @returns - The previous maximum iterator size.
 * @param value - The new maximum iterator size.
 */
  int set_max_list (int value);

  /* This operation sets the default hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous default hop count.
 * @param value - The new default hop count.
 */
  int set_def_hop_count (int value);

  /* This operation sets the maximum hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous maximum hop count.
 * @param value - The new maximum hop count.
 */
  int set_max_hop_count (int value);

  /* This operation sets whether the trader supports modifiable
 * properties.
 *
 * @returns - TRUE if modifiable properties were supported.
 * @param value - TRUE if modifiable properties are to be supported.
 */
  boolean set_supports_modifiable_properties (boolean value);

  /* This operation sets whether the trader supports dynamic
 * properties.
 *
 * @returns - TRUE if dynamic properties were supported.
 * @param value - TRUE if dynamic properties are to be supported.
 */
  boolean set_supports_dynamic_properties (boolean value);

  /* This operation sets whether the trader supports proxy 
 * offers.
 *
 * @returns - TRUE if proxy offers were supported.
 * @param value - TRUE if proxy offers are to be supported.
 */
  boolean set_supports_proxy_offers (boolean value);

  /* This operation sets the default follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous default follow option.
 * @param value - The new default follow option.
 */
  hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_def_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy);

  /* This operation sets the maximum follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous maximum follow option.
 * @param value - The new maximum follow option.
 */
  hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_max_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy);

  /* This operation sets the maximum follow option that can
 * be applied to links.
 *
 * @returns - The previous maximum link follow option.
 * @param value - The new maximum link follow option.
 */
  hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_max_link_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy);

  /* This operation sets the service type repository for a trader.
 *
 * @returns - The previous service type repository.
 * @param repository - The new service type repository.
 */
  org.omg.CORBA.Object set_type_repos (org.omg.CORBA.Object repository);

  /* This operation sets a request identifier stem value.
 * This is used to generate unique query identifiers to
 * prevent cyclic query resolution amongst federated traders.
 *
 * @returns - The previous identifier stem.
 * @param stem - The new identifier stem.
 */
  byte[] set_request_id_stem (byte[] stem);

  /* doc: 19 */
  void list_offers (int how_many, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr) throws hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented;

  /* This operation returns a list of proxy offers made by the
 * trader. Offer identifiers not returned in the returned
 * sequence can be accessed through the returned iterator.
 *
 * @param how_many - The number of offers to return.
 * @param ids - The sequence of returned offer identifiers.
 * @param id_itr - The returned offer iterator.
 *
 * @raises NotImplemented - If the proxy interface is not implemented
 *  by the trader
 */
  void list_proxies (int how_many, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr) throws hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented;
} // interface AdminOperations
