package hoshen.xsm.lightsoft.corba.emsSession;


/**
* hoshen/xsm/lightsoft/corba/emsSession/EmsSession_IOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/emsSession.idl
* 13:11:31 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** 
     * <p>A handle to an instance of this interface is gained via the
     * <a href=_emsSessionFactory.EmsSessionFactory_I.html#emsSessionFactory::EmsSessionFactory_I::getEmsSession>
     * getemsSession</a> operation in EmsSessionFactory_I.</p>
     */
public interface EmsSession_IOperations  extends hoshen.xsm.lightsoft.corba.session.Session_IOperations
{

  /**
   * <p>This allows an NMS to request the manager interfaces that the EMS implements</p>
   * @parm supportedManagerList: list of manager names supported
   *  in the form <i>managerName</i>
   *  where <i>managerName</i> is one of the following defined manager strings
   * <ol>
   * <li> "EMS" (mandatory)
   * <li> "ManagedElement" (mandatory)
   * <li> "MultiLayerSubnetwork" (mandatory)
   * <li> "TrafficDescriptor"
   * <li> "PerformanceManagement"
   * <li> "Protection"
   * <li> "EquipmentInventory"
   * <li> "Maintenance"
   * <li> "GuiCutThrough" (mandatory)
   * </ol>
   * Additional managerName strings can be defined without changing this IDL.
   * @raises globaldefs::ProcessingFailureException<dir> 
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_ACCESS_DENIED  - Raised in case of security violation</dir>
   **/
  void getSupportedManagers (hoshen.xsm.lightsoft.corba.emsSession.EmsSession_IPackage.managerNames_THolder supportedManagerList) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;

  /**
   * <p>This allows an NMS to gain access to the specified manager interface.</p>
   *
   * @parm managerName: The class or type of manager object that the client wants
   * (see getSupportedManagers).
   * @parm managerInterface: The actual object returned will implement the 
   * specified manager interface.  However it is returned as a 
   * Common_I object so that this operation can be generic.  The client should 
   * narrow the returned object to the correct object type.
   * 
   * <p>Attempting to gain access to the following manager interfaces
   * may <u>not</u> raise EXCPT_NOT_IMPLEMENTED:<br>
   * EMS<br>
   * ManagedElement<br>
   * MultiLayerSubnetwork<br>
   * GuiCutThrough</p>
   *
   * @raises globaldefs::ProcessingFailureException<dir> 
   * EXCPT_NOT_IMPLEMENTED - Raised if the EMS does not support the manager<br>
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_ACCESS_DENIED  - Raised in case of security violation</dir>
   **/
  void getManager (String managerName, hoshen.xsm.lightsoft.corba.common.Common_IHolder managerInterface) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;

  /**
   * <p>This allows an NMS to gain access to the event channel to receive notifications.</p>
   *
   * @parm EventChannel eventChannel: The event channel to be used by the NMS.
   * 
   * @raises globaldefs::ProcessingFailureException<dir> 
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_ACCESS_DENIED  - Raised in case of security violation</dir>
   **/
  void getEventChannel (hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.EventChannelHolder eventChannel) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;
} // interface EmsSession_IOperations
