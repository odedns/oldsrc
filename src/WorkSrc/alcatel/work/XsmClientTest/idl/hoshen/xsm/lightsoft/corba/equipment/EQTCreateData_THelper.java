package hoshen.xsm.lightsoft.corba.equipment;


/**
* hoshen/xsm/lightsoft/corba/equipment/EQTCreateData_THelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/equipment.idl
* 13:11:34 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
   * <p>Represents the data necessary to create an equipment object.</p>
   *
   * string <b>userLabel</b>:
   * <dir>The userLabel is provisionable by the NMS.</dir>
   *
   * boolean <b>forceUniqueness</b>:
   * <dir>Specifies whether uniqueness of the userLabel is required amongst equipments of 
   *  the EMS.  The operation will fail if userLabel is already in use.</dir>
   *
   * string <b>owner</b>:
   * <dir>owner may be specified by the NMS. May be empty.</dir>
   *
   * EquipmentObjectType_T <b>expectedEquipmentObjectType</b>: 
   * <dir>Defines the type of expected equipment.</dir>
   *
   * globaldefs::NamingAttributes_T <b>equipmentHolderName</b>:
   * <dir>Represents the name of equipment holder that will contain the equipment.</dir>
   *
   * globaldefs::NVSList_T <b>additionalInfo</b>: 
   * <dir> This a vendor specific attribute which contains additional specific 
   * information about the equipment.</dir>
   **/
abstract public class EQTCreateData_THelper
{
  private static String  _id = "IDL:mtnm.tmforum.org/equipment/EQTCreateData_T:1.0";

  public static void insert (org.omg.CORBA.Any a, hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [6];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "userLabel",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_boolean);
          _members0[1] = new org.omg.CORBA.StructMember (
            "forceUniqueness",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "owner",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (hoshen.xsm.lightsoft.corba.equipment.EquipmentObjectType_THelper.id (), "EquipmentObjectType_T", _tcOf_members0);
          _members0[3] = new org.omg.CORBA.StructMember (
            "expectedEquipmentObjectType",
            _tcOf_members0,
            null);
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.globaldefs.NameAndStringValue_THelper.type ();
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_sequence_tc (0, _tcOf_members0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.id (), "NVSList_T", _tcOf_members0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (hoshen.xsm.lightsoft.corba.globaldefs.NamingAttributes_THelper.id (), "NamingAttributes_T", _tcOf_members0);
          _members0[4] = new org.omg.CORBA.StructMember (
            "equipmentHolderName",
            _tcOf_members0,
            null);
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.globaldefs.NameAndStringValue_THelper.type ();
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_sequence_tc (0, _tcOf_members0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.id (), "NVSList_T", _tcOf_members0);
          _members0[5] = new org.omg.CORBA.StructMember (
            "additionalInfo",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_THelper.id (), "EQTCreateData_T", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T read (org.omg.CORBA.portable.InputStream istream)
  {
    hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T value = new hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T ();
    value.userLabel = istream.read_string ();
    value.forceUniqueness = istream.read_boolean ();
    value.owner = istream.read_string ();
    value.expectedEquipmentObjectType = istream.read_string ();
    value.equipmentHolderName = hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.read (istream);
    value.additionalInfo = hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, hoshen.xsm.lightsoft.corba.equipment.EQTCreateData_T value)
  {
    ostream.write_string (value.userLabel);
    ostream.write_boolean (value.forceUniqueness);
    ostream.write_string (value.owner);
    ostream.write_string (value.expectedEquipmentObjectType);
    hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.write (ostream, value.equipmentHolderName);
    hoshen.xsm.lightsoft.corba.globaldefs.NVSList_THelper.write (ostream, value.additionalInfo);
  }

}
