package hoshen.xsm.lightsoft.corba.CosNotifyComm;


/**
* hoshen/xsm/lightsoft/corba/CosNotifyComm/SequencePullSupplierOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosNotifyComm.idl
* 13:11:11 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
    * An interface for sequences pull suppliers.
    */
public interface SequencePullSupplierOperations  extends hoshen.xsm.lightsoft.corba.CosNotifyComm.NotifySubscribeOperations
{

  /**
       * Pull a sequence of events from this supplier
       * @parm <code>max_number</code> - The maximum number of events to
       * retrieve.
       * @returns The event sequence.
       * @raises Disconnected If this supplier is disconnected.
       */
  hoshen.xsm.lightsoft.corba.CosNotification.StructuredEvent[] pull_structured_events (int max_number) throws hoshen.xsm.lightsoft.corba.CosEventComm.Disconnected;

  /**
       * Try to pull a sequence of structured events from this supplier.
       * @parm <code>max_number</code> - The maximum number of events to
       * retrieve.
       * @parm <code>has_event</code> - boolean indicating if supplier has
       * an event.
       * @returns The event sequence.
       * @raises Disconnected If this supplier is disconnected.
       */
  hoshen.xsm.lightsoft.corba.CosNotification.StructuredEvent[] try_pull_structured_events (int max_number, org.omg.CORBA.BooleanHolder has_event) throws hoshen.xsm.lightsoft.corba.CosEventComm.Disconnected;

  /**
       * Disconnect this pull supplier.
       */
  void disconnect_sequence_pull_supplier ();
} // interface SequencePullSupplierOperations
