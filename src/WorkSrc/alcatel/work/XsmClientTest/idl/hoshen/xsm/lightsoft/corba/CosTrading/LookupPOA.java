package hoshen.xsm.lightsoft.corba.CosTrading;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/LookupPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:18 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This interface is used to query the trader and retrieve
 * offers which match specified conditions and constraints.
 */
public abstract class LookupPOA extends org.omg.PortableServer.Servant
                implements hoshen.xsm.lightsoft.corba.CosTrading.LookupOperations, org.omg.CORBA.portable.InvokeHandler
{

  public hoshen.xsm.lightsoft.corba.CosTrading.Lookup _this() {
     return hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.narrow(
        super._this_object());
  }

  public hoshen.xsm.lightsoft.corba.CosTrading.Lookup _this(org.omg.CORBA.ORB orb) {
     return hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Lookup:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("query", new java.lang.Integer (0));
    _methods.put ("_get_lookup_if", new java.lang.Integer (1));
    _methods.put ("_get_register_if", new java.lang.Integer (2));
    _methods.put ("_get_link_if", new java.lang.Integer (3));
    _methods.put ("_get_proxy_if", new java.lang.Integer (4));
    _methods.put ("_get_admin_if", new java.lang.Integer (5));
    _methods.put ("_get_supports_modifiable_properties", new java.lang.Integer (6));
    _methods.put ("_get_supports_dynamic_properties", new java.lang.Integer (7));
    _methods.put ("_get_supports_proxy_offers", new java.lang.Integer (8));
    _methods.put ("_get_type_repos", new java.lang.Integer (9));
    _methods.put ("_get_def_search_card", new java.lang.Integer (10));
    _methods.put ("_get_max_search_card", new java.lang.Integer (11));
    _methods.put ("_get_def_match_card", new java.lang.Integer (12));
    _methods.put ("_get_max_match_card", new java.lang.Integer (13));
    _methods.put ("_get_def_return_card", new java.lang.Integer (14));
    _methods.put ("_get_max_return_card", new java.lang.Integer (15));
    _methods.put ("_get_max_list", new java.lang.Integer (16));
    _methods.put ("_get_def_hop_count", new java.lang.Integer (17));
    _methods.put ("_get_max_hop_count", new java.lang.Integer (18));
    _methods.put ("_get_def_follow_policy", new java.lang.Integer (19));
    _methods.put ("_get_max_follow_policy", new java.lang.Integer (20));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* doc: 25 */
       case 0:  // CosTrading/Lookup/query
       {
         try {
           String type = in.read_string ();
           String constr = in.read_string ();
           String pref = in.read_string ();
           hoshen.xsm.lightsoft.corba.CosTrading.Policy policies[] = hoshen.xsm.lightsoft.corba.CosTrading.PolicySeqHelper.read (in);
           hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.SpecifiedProps desired_props = hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.SpecifiedPropsHelper.read (in);
           int how_many = in.read_ulong ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferSeqHolder offers = new hoshen.xsm.lightsoft.corba.CosTrading.OfferSeqHolder ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIteratorHolder offer_iter = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIteratorHolder ();
           hoshen.xsm.lightsoft.corba.CosTrading.PolicyNameSeqHolder limits_applied = new hoshen.xsm.lightsoft.corba.CosTrading.PolicyNameSeqHolder ();
           this.query (type, constr, pref, policies, desired_props, how_many, offers, offer_iter, limits_applied);
           out = $rh.createReply();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferSeqHelper.write (out, offers.value);
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIteratorHelper.write (out, offer_iter.value);
           hoshen.xsm.lightsoft.corba.CosTrading.PolicyNameSeqHelper.write (out, limits_applied.value);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.IllegalServiceType __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.IllegalServiceTypeHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.UnknownServiceType __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.UnknownServiceTypeHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.IllegalConstraint __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.IllegalConstraintHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.IllegalPreference __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.IllegalPreferenceHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.IllegalPolicyName __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.IllegalPolicyNameHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.PolicyTypeMismatch __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.PolicyTypeMismatchHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.InvalidPolicyValue __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.LookupPackage.InvalidPolicyValueHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.IllegalPropertyName __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.IllegalPropertyNameHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.DuplicatePropertyName __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.DuplicatePropertyNameHelper.write (out, __ex);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.DuplicatePolicyName __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.DuplicatePolicyNameHelper.write (out, __ex);
         }
         break;
       }

       case 1:  // CosTrading/TraderComponents/_get_lookup_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Lookup __result = null;
         __result = this.lookup_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.write (out, __result);
         break;
       }

       case 2:  // CosTrading/TraderComponents/_get_register_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Register __result = null;
         __result = this.register_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.write (out, __result);
         break;
       }

       case 3:  // CosTrading/TraderComponents/_get_link_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Link __result = null;
         __result = this.link_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.LinkHelper.write (out, __result);
         break;
       }

       case 4:  // CosTrading/TraderComponents/_get_proxy_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Proxy __result = null;
         __result = this.proxy_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.ProxyHelper.write (out, __result);
         break;
       }

       case 5:  // CosTrading/TraderComponents/_get_admin_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Admin __result = null;
         __result = this.admin_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.AdminHelper.write (out, __result);
         break;
       }

       case 6:  // CosTrading/SupportAttributes/_get_supports_modifiable_properties
       {
         boolean __result = false;
         __result = this.supports_modifiable_properties ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 7:  // CosTrading/SupportAttributes/_get_supports_dynamic_properties
       {
         boolean __result = false;
         __result = this.supports_dynamic_properties ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 8:  // CosTrading/SupportAttributes/_get_supports_proxy_offers
       {
         boolean __result = false;
         __result = this.supports_proxy_offers ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 9:  // CosTrading/SupportAttributes/_get_type_repos
       {
         org.omg.CORBA.Object __result = null;
         __result = this.type_repos ();
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, __result);
         break;
       }

       case 10:  // CosTrading/ImportAttributes/_get_def_search_card
       {
         int __result = (int)0;
         __result = this.def_search_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 11:  // CosTrading/ImportAttributes/_get_max_search_card
       {
         int __result = (int)0;
         __result = this.max_search_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 12:  // CosTrading/ImportAttributes/_get_def_match_card
       {
         int __result = (int)0;
         __result = this.def_match_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 13:  // CosTrading/ImportAttributes/_get_max_match_card
       {
         int __result = (int)0;
         __result = this.max_match_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 14:  // CosTrading/ImportAttributes/_get_def_return_card
       {
         int __result = (int)0;
         __result = this.def_return_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 15:  // CosTrading/ImportAttributes/_get_max_return_card
       {
         int __result = (int)0;
         __result = this.max_return_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 16:  // CosTrading/ImportAttributes/_get_max_list
       {
         int __result = (int)0;
         __result = this.max_list ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 17:  // CosTrading/ImportAttributes/_get_def_hop_count
       {
         int __result = (int)0;
         __result = this.def_hop_count ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 18:  // CosTrading/ImportAttributes/_get_max_hop_count
       {
         int __result = (int)0;
         __result = this.max_hop_count ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 19:  // CosTrading/ImportAttributes/_get_def_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.def_follow_policy ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }

       case 20:  // CosTrading/ImportAttributes/_get_max_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.max_follow_policy ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _LookupPOA
