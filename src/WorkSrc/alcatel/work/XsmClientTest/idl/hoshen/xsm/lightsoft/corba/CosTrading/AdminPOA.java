package hoshen.xsm.lightsoft.corba.CosTrading;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/AdminPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:21 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This interface is used to manage the various policies
 * and constraints applied by the trader.
 */
public abstract class AdminPOA extends org.omg.PortableServer.Servant
                implements hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations, org.omg.CORBA.portable.InvokeHandler
{

  public hoshen.xsm.lightsoft.corba.CosTrading.Admin _this() {
     return hoshen.xsm.lightsoft.corba.CosTrading.AdminHelper.narrow(
        super._this_object());
  }

  public hoshen.xsm.lightsoft.corba.CosTrading.Admin _this(org.omg.CORBA.ORB orb) {
     return hoshen.xsm.lightsoft.corba.CosTrading.AdminHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Admin:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0", 
    "IDL:omg.org/CosTrading/LinkAttributes:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_request_id_stem", new java.lang.Integer (0));
    _methods.put ("set_def_search_card", new java.lang.Integer (1));
    _methods.put ("set_max_search_card", new java.lang.Integer (2));
    _methods.put ("set_def_match_card", new java.lang.Integer (3));
    _methods.put ("set_max_match_card", new java.lang.Integer (4));
    _methods.put ("set_def_return_card", new java.lang.Integer (5));
    _methods.put ("set_max_return_card", new java.lang.Integer (6));
    _methods.put ("set_max_list", new java.lang.Integer (7));
    _methods.put ("set_def_hop_count", new java.lang.Integer (8));
    _methods.put ("set_max_hop_count", new java.lang.Integer (9));
    _methods.put ("set_supports_modifiable_properties", new java.lang.Integer (10));
    _methods.put ("set_supports_dynamic_properties", new java.lang.Integer (11));
    _methods.put ("set_supports_proxy_offers", new java.lang.Integer (12));
    _methods.put ("set_def_follow_policy", new java.lang.Integer (13));
    _methods.put ("set_max_follow_policy", new java.lang.Integer (14));
    _methods.put ("set_max_link_follow_policy", new java.lang.Integer (15));
    _methods.put ("set_type_repos", new java.lang.Integer (16));
    _methods.put ("set_request_id_stem", new java.lang.Integer (17));
    _methods.put ("list_offers", new java.lang.Integer (18));
    _methods.put ("list_proxies", new java.lang.Integer (19));
    _methods.put ("_get_lookup_if", new java.lang.Integer (20));
    _methods.put ("_get_register_if", new java.lang.Integer (21));
    _methods.put ("_get_link_if", new java.lang.Integer (22));
    _methods.put ("_get_proxy_if", new java.lang.Integer (23));
    _methods.put ("_get_admin_if", new java.lang.Integer (24));
    _methods.put ("_get_supports_modifiable_properties", new java.lang.Integer (25));
    _methods.put ("_get_supports_dynamic_properties", new java.lang.Integer (26));
    _methods.put ("_get_supports_proxy_offers", new java.lang.Integer (27));
    _methods.put ("_get_type_repos", new java.lang.Integer (28));
    _methods.put ("_get_def_search_card", new java.lang.Integer (29));
    _methods.put ("_get_max_search_card", new java.lang.Integer (30));
    _methods.put ("_get_def_match_card", new java.lang.Integer (31));
    _methods.put ("_get_max_match_card", new java.lang.Integer (32));
    _methods.put ("_get_def_return_card", new java.lang.Integer (33));
    _methods.put ("_get_max_return_card", new java.lang.Integer (34));
    _methods.put ("_get_max_list", new java.lang.Integer (35));
    _methods.put ("_get_def_hop_count", new java.lang.Integer (36));
    _methods.put ("_get_max_hop_count", new java.lang.Integer (37));
    _methods.put ("_get_def_follow_policy", new java.lang.Integer (38));
    _methods.put ("_get_max_follow_policy", new java.lang.Integer (39));
    _methods.put ("_get_max_link_follow_policy", new java.lang.Integer (40));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CosTrading/Admin/_get_request_id_stem
       {
         byte __result[] = null;
         __result = this.request_id_stem ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.write (out, __result);
         break;
       }


  /* This operation sets the default search cardinality applied to queries. 
 *
 * @returns - The previous default search cardinality.
 * @param value - The new default serach cardinality.
 */
       case 1:  // CosTrading/Admin/set_def_search_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_def_search_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the maximum search cardinality applied to queries. 
 *
 * @returns - The previous maximum search cardinality.
 * @param value - The new maximum search cardinality.
 */
       case 2:  // CosTrading/Admin/set_max_search_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_max_search_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the default match cardinality applied to queries. 
 *
 * @returns - The previous default match cardinality.
 * @param value - The new default match cardinality.
 */
       case 3:  // CosTrading/Admin/set_def_match_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_def_match_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the maximum match cardinality applied to queries. 
 *
 * @returns - The previous maximum match cardinality.
 * @param value - The new maximum match cardinality.
 */
       case 4:  // CosTrading/Admin/set_max_match_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_max_match_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the default return cardinality applied to queries. 
 *
 * @returns - The previous default return cardinality.
 * @param value - The new default return cardinality.
 */
       case 5:  // CosTrading/Admin/set_def_return_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_def_return_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the maximum return cardinality applied to queries. 
 *
 * @returns - The previous maximum return cardinality.
 * @param value - The new maximum return cardinality.
 */
       case 6:  // CosTrading/Admin/set_max_return_card
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_max_return_card (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the maximum size for an iterator. 
 *
 * @returns - The previous maximum iterator size.
 * @param value - The new maximum iterator size.
 */
       case 7:  // CosTrading/Admin/set_max_list
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_max_list (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the default hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous default hop count.
 * @param value - The new default hop count.
 */
       case 8:  // CosTrading/Admin/set_def_hop_count
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_def_hop_count (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets the maximum hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous maximum hop count.
 * @param value - The new maximum hop count.
 */
       case 9:  // CosTrading/Admin/set_max_hop_count
       {
         int value = in.read_ulong ();
         int __result = (int)0;
         __result = this.set_max_hop_count (value);
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }


  /* This operation sets whether the trader supports modifiable
 * properties.
 *
 * @returns - TRUE if modifiable properties were supported.
 * @param value - TRUE if modifiable properties are to be supported.
 */
       case 10:  // CosTrading/Admin/set_supports_modifiable_properties
       {
         boolean value = in.read_boolean ();
         boolean __result = false;
         __result = this.set_supports_modifiable_properties (value);
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }


  /* This operation sets whether the trader supports dynamic
 * properties.
 *
 * @returns - TRUE if dynamic properties were supported.
 * @param value - TRUE if dynamic properties are to be supported.
 */
       case 11:  // CosTrading/Admin/set_supports_dynamic_properties
       {
         boolean value = in.read_boolean ();
         boolean __result = false;
         __result = this.set_supports_dynamic_properties (value);
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }


  /* This operation sets whether the trader supports proxy 
 * offers.
 *
 * @returns - TRUE if proxy offers were supported.
 * @param value - TRUE if proxy offers are to be supported.
 */
       case 12:  // CosTrading/Admin/set_supports_proxy_offers
       {
         boolean value = in.read_boolean ();
         boolean __result = false;
         __result = this.set_supports_proxy_offers (value);
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }


  /* This operation sets the default follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous default follow option.
 * @param value - The new default follow option.
 */
       case 13:  // CosTrading/Admin/set_def_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (in);
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.set_def_follow_policy (policy);
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }


  /* This operation sets the maximum follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous maximum follow option.
 * @param value - The new maximum follow option.
 */
       case 14:  // CosTrading/Admin/set_max_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (in);
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.set_max_follow_policy (policy);
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }


  /* This operation sets the maximum follow option that can
 * be applied to links.
 *
 * @returns - The previous maximum link follow option.
 * @param value - The new maximum link follow option.
 */
       case 15:  // CosTrading/Admin/set_max_link_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (in);
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.set_max_link_follow_policy (policy);
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }


  /* This operation sets the service type repository for a trader.
 *
 * @returns - The previous service type repository.
 * @param repository - The new service type repository.
 */
       case 16:  // CosTrading/Admin/set_type_repos
       {
         org.omg.CORBA.Object repository = org.omg.CORBA.ObjectHelper.read (in);
         org.omg.CORBA.Object __result = null;
         __result = this.set_type_repos (repository);
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, __result);
         break;
       }


  /* This operation sets a request identifier stem value.
 * This is used to generate unique query identifiers to
 * prevent cyclic query resolution amongst federated traders.
 *
 * @returns - The previous identifier stem.
 * @param stem - The new identifier stem.
 */
       case 17:  // CosTrading/Admin/set_request_id_stem
       {
         byte stem[] = hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.read (in);
         byte __result[] = null;
         __result = this.set_request_id_stem (stem);
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.write (out, __result);
         break;
       }


  /* doc: 19 */
       case 18:  // CosTrading/Admin/list_offers
       {
         try {
           int how_many = in.read_ulong ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder ();
           this.list_offers (how_many, ids, id_itr);
           out = $rh.createReply();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHelper.write (out, ids.value);
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.write (out, id_itr.value);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.write (out, __ex);
         }
         break;
       }


  /* This operation returns a list of proxy offers made by the
 * trader. Offer identifiers not returned in the returned
 * sequence can be accessed through the returned iterator.
 *
 * @param how_many - The number of offers to return.
 * @param ids - The sequence of returned offer identifiers.
 * @param id_itr - The returned offer iterator.
 *
 * @raises NotImplemented - If the proxy interface is not implemented
 *  by the trader
 */
       case 19:  // CosTrading/Admin/list_proxies
       {
         try {
           int how_many = in.read_ulong ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder ();
           this.list_proxies (how_many, ids, id_itr);
           out = $rh.createReply();
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHelper.write (out, ids.value);
           hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.write (out, id_itr.value);
         } catch (hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.write (out, __ex);
         }
         break;
       }

       case 20:  // CosTrading/TraderComponents/_get_lookup_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Lookup __result = null;
         __result = this.lookup_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.write (out, __result);
         break;
       }

       case 21:  // CosTrading/TraderComponents/_get_register_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Register __result = null;
         __result = this.register_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.write (out, __result);
         break;
       }

       case 22:  // CosTrading/TraderComponents/_get_link_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Link __result = null;
         __result = this.link_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.LinkHelper.write (out, __result);
         break;
       }

       case 23:  // CosTrading/TraderComponents/_get_proxy_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Proxy __result = null;
         __result = this.proxy_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.ProxyHelper.write (out, __result);
         break;
       }

       case 24:  // CosTrading/TraderComponents/_get_admin_if
       {
         hoshen.xsm.lightsoft.corba.CosTrading.Admin __result = null;
         __result = this.admin_if ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.AdminHelper.write (out, __result);
         break;
       }

       case 25:  // CosTrading/SupportAttributes/_get_supports_modifiable_properties
       {
         boolean __result = false;
         __result = this.supports_modifiable_properties ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 26:  // CosTrading/SupportAttributes/_get_supports_dynamic_properties
       {
         boolean __result = false;
         __result = this.supports_dynamic_properties ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 27:  // CosTrading/SupportAttributes/_get_supports_proxy_offers
       {
         boolean __result = false;
         __result = this.supports_proxy_offers ();
         out = $rh.createReply();
         out.write_boolean (__result);
         break;
       }

       case 28:  // CosTrading/SupportAttributes/_get_type_repos
       {
         org.omg.CORBA.Object __result = null;
         __result = this.type_repos ();
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, __result);
         break;
       }

       case 29:  // CosTrading/ImportAttributes/_get_def_search_card
       {
         int __result = (int)0;
         __result = this.def_search_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 30:  // CosTrading/ImportAttributes/_get_max_search_card
       {
         int __result = (int)0;
         __result = this.max_search_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 31:  // CosTrading/ImportAttributes/_get_def_match_card
       {
         int __result = (int)0;
         __result = this.def_match_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 32:  // CosTrading/ImportAttributes/_get_max_match_card
       {
         int __result = (int)0;
         __result = this.max_match_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 33:  // CosTrading/ImportAttributes/_get_def_return_card
       {
         int __result = (int)0;
         __result = this.def_return_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 34:  // CosTrading/ImportAttributes/_get_max_return_card
       {
         int __result = (int)0;
         __result = this.max_return_card ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 35:  // CosTrading/ImportAttributes/_get_max_list
       {
         int __result = (int)0;
         __result = this.max_list ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 36:  // CosTrading/ImportAttributes/_get_def_hop_count
       {
         int __result = (int)0;
         __result = this.def_hop_count ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 37:  // CosTrading/ImportAttributes/_get_max_hop_count
       {
         int __result = (int)0;
         __result = this.max_hop_count ();
         out = $rh.createReply();
         out.write_ulong (__result);
         break;
       }

       case 38:  // CosTrading/ImportAttributes/_get_def_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.def_follow_policy ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }

       case 39:  // CosTrading/ImportAttributes/_get_max_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.max_follow_policy ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }

       case 40:  // CosTrading/LinkAttributes/_get_max_link_follow_policy
       {
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = null;
         __result = this.max_link_follow_policy ();
         out = $rh.createReply();
         hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (out, __result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _AdminPOA
