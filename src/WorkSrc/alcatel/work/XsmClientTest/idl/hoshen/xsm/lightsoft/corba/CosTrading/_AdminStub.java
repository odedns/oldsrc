package hoshen.xsm.lightsoft.corba.CosTrading;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/_AdminStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:21 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This interface is used to manage the various policies
 * and constraints applied by the trader.
 */
public class _AdminStub extends org.omg.CORBA_2_3.portable.ObjectImpl implements hoshen.xsm.lightsoft.corba.CosTrading.Admin
{
  // Constructors
  // NOTE:  If the default constructor is used, the
  //        object is useless until _set_delegate (...)
  //        is called.
  public _AdminStub ()
  {
    super ();
  }

  public _AdminStub (org.omg.CORBA.portable.Delegate delegate)
  {
    super ();
    _set_delegate (delegate);
  }

  public byte[] request_id_stem ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_request_id_stem",true);
          _in = _invoke (_out);
          byte __result[] = hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_request_id_stem",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          byte __result[] = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).request_id_stem(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // request_id_stem


  /* This operation sets the default search cardinality applied to queries. 
 *
 * @returns - The previous default search cardinality.
 * @param value - The new default serach cardinality.
 */
  public int set_def_search_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_def_search_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_def_search_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_def_search_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_def_search_card


  /* This operation sets the maximum search cardinality applied to queries. 
 *
 * @returns - The previous maximum search cardinality.
 * @param value - The new maximum search cardinality.
 */
  public int set_max_search_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_search_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_search_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_search_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_search_card


  /* This operation sets the default match cardinality applied to queries. 
 *
 * @returns - The previous default match cardinality.
 * @param value - The new default match cardinality.
 */
  public int set_def_match_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_def_match_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_def_match_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_def_match_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_def_match_card


  /* This operation sets the maximum match cardinality applied to queries. 
 *
 * @returns - The previous maximum match cardinality.
 * @param value - The new maximum match cardinality.
 */
  public int set_max_match_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_match_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_match_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_match_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_match_card


  /* This operation sets the default return cardinality applied to queries. 
 *
 * @returns - The previous default return cardinality.
 * @param value - The new default return cardinality.
 */
  public int set_def_return_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_def_return_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_def_return_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_def_return_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_def_return_card


  /* This operation sets the maximum return cardinality applied to queries. 
 *
 * @returns - The previous maximum return cardinality.
 * @param value - The new maximum return cardinality.
 */
  public int set_max_return_card (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_return_card",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_return_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_return_card( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_return_card


  /* This operation sets the maximum size for an iterator. 
 *
 * @returns - The previous maximum iterator size.
 * @param value - The new maximum iterator size.
 */
  public int set_max_list (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_list",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_list",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_list( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_list


  /* This operation sets the default hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous default hop count.
 * @param value - The new default hop count.
 */
  public int set_def_hop_count (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_def_hop_count",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_def_hop_count",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_def_hop_count( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_def_hop_count


  /* This operation sets the maximum hop count used when resolving
 * federated queries. 
 *
 * @returns - The previous maximum hop count.
 * @param value - The new maximum hop count.
 */
  public int set_max_hop_count (int value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_hop_count",true);
          _out.write_ulong (value);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_hop_count",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_hop_count( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_hop_count


  /* This operation sets whether the trader supports modifiable
 * properties.
 *
 * @returns - TRUE if modifiable properties were supported.
 * @param value - TRUE if modifiable properties are to be supported.
 */
  public boolean set_supports_modifiable_properties (boolean value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_supports_modifiable_properties",true);
          _out.write_boolean (value);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_supports_modifiable_properties",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_supports_modifiable_properties( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_supports_modifiable_properties


  /* This operation sets whether the trader supports dynamic
 * properties.
 *
 * @returns - TRUE if dynamic properties were supported.
 * @param value - TRUE if dynamic properties are to be supported.
 */
  public boolean set_supports_dynamic_properties (boolean value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_supports_dynamic_properties",true);
          _out.write_boolean (value);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_supports_dynamic_properties",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_supports_dynamic_properties( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_supports_dynamic_properties


  /* This operation sets whether the trader supports proxy 
 * offers.
 *
 * @returns - TRUE if proxy offers were supported.
 * @param value - TRUE if proxy offers are to be supported.
 */
  public boolean set_supports_proxy_offers (boolean value)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_supports_proxy_offers",true);
          _out.write_boolean (value);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_supports_proxy_offers",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_supports_proxy_offers( value );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_supports_proxy_offers


  /* This operation sets the default follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous default follow option.
 * @param value - The new default follow option.
 */
  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_def_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_def_follow_policy",true);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (_out, policy);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_def_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_def_follow_policy( policy );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_def_follow_policy


  /* This operation sets the maximum follow option applied to link
 * traversal for query resolution.
 *
 * @returns - The previous maximum follow option.
 * @param value - The new maximum follow option.
 */
  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_max_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_follow_policy",true);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (_out, policy);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_follow_policy( policy );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_follow_policy


  /* This operation sets the maximum follow option that can
 * be applied to links.
 *
 * @returns - The previous maximum link follow option.
 * @param value - The new maximum link follow option.
 */
  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption set_max_link_follow_policy (hoshen.xsm.lightsoft.corba.CosTrading.FollowOption policy)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_max_link_follow_policy",true);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (_out, policy);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_max_link_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_max_link_follow_policy( policy );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_max_link_follow_policy


  /* This operation sets the service type repository for a trader.
 *
 * @returns - The previous service type repository.
 * @param repository - The new service type repository.
 */
  public org.omg.CORBA.Object set_type_repos (org.omg.CORBA.Object repository)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_type_repos",true);
          org.omg.CORBA.ObjectHelper.write (_out, repository);
          _in = _invoke (_out);
          org.omg.CORBA.Object __result = org.omg.CORBA.ObjectHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_type_repos",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          org.omg.CORBA.Object __result = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_type_repos( repository );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_type_repos


  /* This operation sets a request identifier stem value.
 * This is used to generate unique query identifiers to
 * prevent cyclic query resolution amongst federated traders.
 *
 * @returns - The previous identifier stem.
 * @param stem - The new identifier stem.
 */
  public byte[] set_request_id_stem (byte[] stem)
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("set_request_id_stem",true);
          hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.write (_out, stem);
          _in = _invoke (_out);
          byte __result[] = hoshen.xsm.lightsoft.corba.CosTrading.AdminPackage.OctetSeqHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "set_request_id_stem",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          byte __result[] = ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).set_request_id_stem( stem );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // set_request_id_stem


  /* doc: 19 */
  public void list_offers (int how_many, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr) throws hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("list_offers",true);
          _out.write_ulong (how_many);
          _in = _invoke (_out);
          ids.value = hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHelper.read (_in);
          id_itr.value = hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.read (_in);
          return;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
           if ( _id.equals ( hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.id() ) )
            throw hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.read( _in );
           else throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "list_offers",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder _ids = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder();
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder _id_itr = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder();
          ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).list_offers( how_many,_ids,_id_itr );
         ids.value = _ids.value;
         id_itr.value = _id_itr.value;
          return;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // list_offers


  /* This operation returns a list of proxy offers made by the
 * trader. Offer identifiers not returned in the returned
 * sequence can be accessed through the returned iterator.
 *
 * @param how_many - The number of offers to return.
 * @param ids - The sequence of returned offer identifiers.
 * @param id_itr - The returned offer iterator.
 *
 * @raises NotImplemented - If the proxy interface is not implemented
 *  by the trader
 */
  public void list_proxies (int how_many, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder ids, hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder id_itr) throws hoshen.xsm.lightsoft.corba.CosTrading.NotImplemented
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("list_proxies",true);
          _out.write_ulong (how_many);
          _in = _invoke (_out);
          ids.value = hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHelper.read (_in);
          id_itr.value = hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHelper.read (_in);
          return;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
           if ( _id.equals ( hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.id() ) )
            throw hoshen.xsm.lightsoft.corba.CosTrading.NotImplementedHelper.read( _in );
           else throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "list_proxies",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder _ids = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdSeqHolder();
         hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder _id_itr = new hoshen.xsm.lightsoft.corba.CosTrading.OfferIdIteratorHolder();
          ((hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations)_so.servant).list_proxies( how_many,_ids,_id_itr );
         ids.value = _ids.value;
         id_itr.value = _id_itr.value;
          return;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // list_proxies

  public hoshen.xsm.lightsoft.corba.CosTrading.Lookup lookup_if ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_lookup_if",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.Lookup __result = hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_lookup_if",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.Lookup __result = ((hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations)_so.servant).lookup_if(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // lookup_if

  public hoshen.xsm.lightsoft.corba.CosTrading.Register register_if ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_register_if",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.Register __result = hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_register_if",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.Register __result = ((hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations)_so.servant).register_if(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // register_if

  public hoshen.xsm.lightsoft.corba.CosTrading.Link link_if ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_link_if",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.Link __result = hoshen.xsm.lightsoft.corba.CosTrading.LinkHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_link_if",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.Link __result = ((hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations)_so.servant).link_if(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // link_if

  public hoshen.xsm.lightsoft.corba.CosTrading.Proxy proxy_if ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_proxy_if",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.Proxy __result = hoshen.xsm.lightsoft.corba.CosTrading.ProxyHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_proxy_if",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.Proxy __result = ((hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations)_so.servant).proxy_if(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // proxy_if

  public hoshen.xsm.lightsoft.corba.CosTrading.Admin admin_if ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_admin_if",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.Admin __result = hoshen.xsm.lightsoft.corba.CosTrading.AdminHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_admin_if",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.Admin __result = ((hoshen.xsm.lightsoft.corba.CosTrading.TraderComponentsOperations)_so.servant).admin_if(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // admin_if

  public boolean supports_modifiable_properties ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_supports_modifiable_properties",true);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_supports_modifiable_properties",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.SupportAttributesOperations)_so.servant).supports_modifiable_properties(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // supports_modifiable_properties

  public boolean supports_dynamic_properties ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_supports_dynamic_properties",true);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_supports_dynamic_properties",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.SupportAttributesOperations)_so.servant).supports_dynamic_properties(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // supports_dynamic_properties

  public boolean supports_proxy_offers ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_supports_proxy_offers",true);
          _in = _invoke (_out);
          boolean __result = _in.read_boolean ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_supports_proxy_offers",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          boolean __result = ((hoshen.xsm.lightsoft.corba.CosTrading.SupportAttributesOperations)_so.servant).supports_proxy_offers(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // supports_proxy_offers

  public org.omg.CORBA.Object type_repos ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_type_repos",true);
          _in = _invoke (_out);
          org.omg.CORBA.Object __result = org.omg.CORBA.ObjectHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_type_repos",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          org.omg.CORBA.Object __result = ((hoshen.xsm.lightsoft.corba.CosTrading.SupportAttributesOperations)_so.servant).type_repos(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // type_repos

  public int def_search_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_def_search_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_def_search_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).def_search_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // def_search_card

  public int max_search_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_search_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_search_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_search_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_search_card

  public int def_match_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_def_match_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_def_match_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).def_match_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // def_match_card

  public int max_match_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_match_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_match_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_match_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_match_card

  public int def_return_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_def_return_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_def_return_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).def_return_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // def_return_card

  public int max_return_card ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_return_card",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_return_card",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_return_card(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_return_card

  public int max_list ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_list",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_list",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_list(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_list

  public int def_hop_count ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_def_hop_count",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_def_hop_count",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).def_hop_count(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // def_hop_count

  public int max_hop_count ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_hop_count",true);
          _in = _invoke (_out);
          int __result = _in.read_ulong ();
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_hop_count",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          int __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_hop_count(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_hop_count

  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption def_follow_policy ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_def_follow_policy",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_def_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).def_follow_policy(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // def_follow_policy

  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption max_follow_policy ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_follow_policy",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.ImportAttributesOperations)_so.servant).max_follow_policy(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_follow_policy

  public hoshen.xsm.lightsoft.corba.CosTrading.FollowOption max_link_follow_policy ()
  {
    while(true) {
      if ( !this._is_local() ) {
        org.omg.CORBA.portable.InputStream _in = null;
        try {
          org.omg.CORBA.portable.OutputStream _out = _request ("_get_max_link_follow_policy",true);
          _in = _invoke (_out);
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (_in);
          return __result;
        } catch (org.omg.CORBA.portable.ApplicationException _ex) {
          _in = _ex.getInputStream ();
          String _id = _ex.getId ();
          throw new org.omg.CORBA.UNKNOWN( "Unexpected User Exception: " + _id );
        } catch (org.omg.CORBA.portable.RemarshalException _rm) {
          continue;
        } catch (org.omg.CORBA.portable.UnknownException _ue) {
          Throwable _oe = _ue.originalEx;
          if (_oe instanceof Error)
              throw (Error)_oe;
          else if (_oe instanceof RuntimeException)
              throw (RuntimeException)_oe;
          else
              throw _ue;
        } finally { _releaseReply (_in); }
      }
      else {
        org.omg.CORBA.portable.ServantObject _so =
          _servant_preinvoke( "_get_max_link_follow_policy",_opsClass );
        if ( _so == null ) { 
          continue;
        }
        try {
          hoshen.xsm.lightsoft.corba.CosTrading.FollowOption __result = ((hoshen.xsm.lightsoft.corba.CosTrading.LinkAttributesOperations)_so.servant).max_link_follow_policy(  );
          return __result;
        } finally { _servant_postinvoke( _so ); }
      }
    }
  } // max_link_follow_policy

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Admin:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0", 
    "IDL:omg.org/CosTrading/LinkAttributes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  final public static java.lang.Class _opsClass =
    hoshen.xsm.lightsoft.corba.CosTrading.AdminOperations.class;

  private void readObject (java.io.ObjectInputStream s)
  {
     try 
     {
       String str = s.readUTF ();
       org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init ((String[])null, null).string_to_object (str);
       org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
       _set_delegate (delegate);
     } catch (java.io.IOException e) {}
  }

  private void writeObject (java.io.ObjectOutputStream s)
  {
     try 
     {
       String str = org.omg.CORBA.ORB.init ((String[])null, null).object_to_string (this);
       s.writeUTF (str);
     } catch (java.io.IOException e) {}
  }
} // class _AdminStub
