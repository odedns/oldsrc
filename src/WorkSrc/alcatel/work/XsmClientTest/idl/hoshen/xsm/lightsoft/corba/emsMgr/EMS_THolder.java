package hoshen.xsm.lightsoft.corba.emsMgr;

/**
* hoshen/xsm/lightsoft/corba/emsMgr/EMS_THolder.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/emsMgr.idl
* 13:11:26 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
   * <p>Holds EMS identification information.</p>
   *
   * globaldefs::NamingAttributes_T <b>name</b>:
   * <dir>Represents the friendly name of the EMS and is constructed
   * according to the following pattern:<dir>
   * <code> "<i>CompanyName</i>/<i>EMSName</i>" </code>
   * The EMSName must be unique relative to the CompanyName. It is up to each
   * company to maintain this.</dir>
   * It is a readonly attribute.</dir>
   *
   * string <b>userLabel</b>:
   * <dir>The userLabel is a friendly name that the operator wants to give
   * to the EMS. Typical expectations of the operator is that the same
   * name is seen on all operation systems. This is set by the NMS and could be
   * displayed on the EMS based on each systems'
   * capabilities. THIS IS NOT A MANDATORY EXPECTATION, but is left to the
   * implementation of the EMS. This attribute can be set
   * by NMS through the Common_I interface service
   * <a href=_common.Common_I.html#common::Common_I::setUserLabel>setUserLabel</a>. 
   * It is a read/write attribute.</dir>
   *
   * string <b>nativeEMSName</b>:
   * <dir>Represents how the EMS refers to itself on EMS displays. Its
   * aim is to provide a "nomenclature bridge" to aid relating information
   * presented on NMS displays to EMS displays (via GUI cut through).
   * May be a null string.</dir>
   *
   * string <b>owner</b>:
   * <dir>The owner is provisionable by the NMS. This attribute can be set
   * by NMS through the Common_I interface service
   * <a href=_common.Common_I.html#common::Common_I::setOwner>setOwner</a>. 
   * It is a read/write attribute.</dir>
   *
   * string <b>emsVersion</b>:
   * <dir>Software version of the EMS. This is a free format string 
   * with no semantics attached to it for the NMS. Each EMS system 
   * models its software version independently. There is no
   * standard way to represent the software version.
   * Decision about support of a particular version by the NMS system is
   * up to the NMS system. emsVersion may be an empty string.
   * It is a readonly attribute.</dir>
   *
   * string <b>type</b>:
   * <dir>Free format string indicating the type of EMS.  The EMS type may be empty string.
   * It is a readonly attribute.</dir>
   *
   * globaldefs::NVSList_T <b>additionalInfo</b>:
   * <dir>This attribute allows the communication from the EMS to the NMS of additional 
   * information which is not explicitly modelled.
   * It is a readonly attribute.</dir>
   **/
public final class EMS_THolder implements org.omg.CORBA.portable.Streamable
{
  public hoshen.xsm.lightsoft.corba.emsMgr.EMS_T value = null;

  public EMS_THolder ()
  {
  }

  public EMS_THolder (hoshen.xsm.lightsoft.corba.emsMgr.EMS_T initialValue)
  {
    value = initialValue;
  }

  public void _read (org.omg.CORBA.portable.InputStream i)
  {
    value = hoshen.xsm.lightsoft.corba.emsMgr.EMS_THelper.read (i);
  }

  public void _write (org.omg.CORBA.portable.OutputStream o)
  {
    hoshen.xsm.lightsoft.corba.emsMgr.EMS_THelper.write (o, value);
  }

  public org.omg.CORBA.TypeCode _type ()
  {
    return hoshen.xsm.lightsoft.corba.emsMgr.EMS_THelper.type ();
  }

}
