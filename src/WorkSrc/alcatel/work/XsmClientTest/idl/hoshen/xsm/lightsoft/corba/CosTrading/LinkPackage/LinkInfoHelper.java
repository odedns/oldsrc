package hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage;


/**
* hoshen/xsm/lightsoft/corba/CosTrading/LinkPackage/LinkInfoHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosTrading.idl
* 13:11:20 GMT+02:00 יום חמישי 28 יוני 2007
*/


/** This structure holds information about federated
 * trader interfaces. It holds references to the Lookup
 * and Register interfaces on the linked trader. Plus
 * policy options about how the link is used.
 */
abstract public class LinkInfoHelper
{
  private static String  _id = "IDL:omg.org/CosTrading/Link/LinkInfo:1.0";

  public static void insert (org.omg.CORBA.Any a, hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [4];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.type ();
          _members0[0] = new org.omg.CORBA.StructMember (
            "target",
            _tcOf_members0,
            null);
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.type ();
          _members0[1] = new org.omg.CORBA.StructMember (
            "target_reg",
            _tcOf_members0,
            null);
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.type ();
          _members0[2] = new org.omg.CORBA.StructMember (
            "def_pass_on_follow_rule",
            _tcOf_members0,
            null);
          _tcOf_members0 = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.type ();
          _members0[3] = new org.omg.CORBA.StructMember (
            "limiting_follow_rule",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfoHelper.id (), "LinkInfo", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo read (org.omg.CORBA.portable.InputStream istream)
  {
    hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo value = new hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo ();
    value.target = hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.read (istream);
    value.target_reg = hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.read (istream);
    value.def_pass_on_follow_rule = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (istream);
    value.limiting_follow_rule = hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, hoshen.xsm.lightsoft.corba.CosTrading.LinkPackage.LinkInfo value)
  {
    hoshen.xsm.lightsoft.corba.CosTrading.LookupHelper.write (ostream, value.target);
    hoshen.xsm.lightsoft.corba.CosTrading.RegisterHelper.write (ostream, value.target_reg);
    hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (ostream, value.def_pass_on_follow_rule);
    hoshen.xsm.lightsoft.corba.CosTrading.FollowOptionHelper.write (ostream, value.limiting_follow_rule);
  }

}
