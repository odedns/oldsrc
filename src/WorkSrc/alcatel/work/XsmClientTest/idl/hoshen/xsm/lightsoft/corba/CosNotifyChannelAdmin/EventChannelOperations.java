package hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin;


/**
* hoshen/xsm/lightsoft/corba/CosNotifyChannelAdmin/EventChannelOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosNotifyChannelAdmin.idl
* 13:11:07 GMT+02:00 יום חמישי 28 יוני 2007
*/


/**
    * An interface for the event channel.
    */
public interface EventChannelOperations  extends hoshen.xsm.lightsoft.corba.CosNotification.QoSAdminOperations, hoshen.xsm.lightsoft.corba.CosNotification.AdminPropertiesAdminOperations, hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.EventChannelOperations
{

  /**
       * The factory object that created this event channel object.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.EventChannelFactory MyFactory ();

  /**
       * The default consumer administration object. This object has the 
       * unique identification number zero.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ConsumerAdmin default_consumer_admin ();

  /**
       * The default supplier administration object. This object has the 
       * unique identification number zero.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.SupplierAdmin default_supplier_admin ();

  /**
       * The default filter factory object for this event channel.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyFilter.FilterFactory default_filter_factory ();

  /**
       * Creates an administration object for event consumers.
       * @parm <code>op</code> - Indicates whether the newly created
       * administration object should use AND or OR semantics when combining
       * administration object filters and proxy filters.
       * @parm <code>id</code> - The unique identifier for the administration
       * object.
       * @returns A <code>ConsumerAdmin</code> object reference.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ConsumerAdmin new_for_consumers (hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.InterFilterGroupOperator op, org.omg.CORBA.IntHolder id);

  /**
       * Creates an administration object for event suppliers.
       * @parm <code>op</code> - Indicates whether the newly created
       * administration object should use AND or OR semantics when combining
       * administration object filters and proxy filters.
       * @parm <code>id</code> - The unique identifier for the administration
       * object.
       * @returns A <code>SupplierAdmin</code> object reference.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.SupplierAdmin new_for_suppliers (hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.InterFilterGroupOperator op, org.omg.CORBA.IntHolder id);

  /**
       * Get an administration object from its ID.
       * @parm <code>id</code> - A unique identifier for the administration
       * object.
       * @returns A <code>ConsumerAdmin</code> object reference.
       * @raises AdminNotFound If no administration object with that ID
       * could be found.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.ConsumerAdmin get_consumeradmin (int id) throws hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.AdminNotFound;

  /**
       * Get an administration object from its ID.
       * @parm <code>id</code> - A unique identifier for the administration
       * object.
       * @returns A <code>SupplierAdmin</code> object reference.
       * @raises AdminNotFound If no administration object with that ID
       * could be found.
       */
  hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.SupplierAdmin get_supplieradmin (int id) throws hoshen.xsm.lightsoft.corba.CosNotifyChannelAdmin.AdminNotFound;

  /**
       * Get all consumer administration objects.
       * @returns A sequence of administration object unique identifiers.
       */
  int[] get_all_consumeradmins ();

  /**
       * Get all supplier administration objects.
       * @returns A sequence of administration object unique identifiers.
       */
  int[] get_all_supplieradmins ();
} // interface EventChannelOperations
