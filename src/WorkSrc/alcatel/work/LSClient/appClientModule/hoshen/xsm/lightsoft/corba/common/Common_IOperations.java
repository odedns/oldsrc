package hoshen.xsm.lightsoft.corba.common;


/**
* hoshen/xsm/lightsoft/corba/common/Common_IOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/common.idl
* 11:11:09 IST יום ראשון 6 נובמבר 2005
*/


/**
   * <p>The interface Common_I is a set of services and utilities 
   * that is inherited by every manager interface.<p>
   **/
public interface Common_IOperations 
{

  /**
   * <p>The nativeEMSName is owned by the EMS.  It represents how an EMS user addresses an object
   * on the EMS GUI.  The EMS may or may not support changing this value.</p>
   *
   * <p>When an object is created by the EMS, the EMS selects the nativeEMSName for the object.</p>
   *
   * <p>When an object is created by an NMS, the NMS specifies the userLabel for the object.  
   * If the EMS supports setting of nativeEMSNames, the nativeEMSName should be set to the same
   * value as the userLabel.  If the EMS does not support setting of nativeEMSNames, or if the
   * nativeEMSName has constraints that the
   * userLabel does not satisfy, the EMS selects the nativeEMSName for the object.</p>
   *
   * <p>After an object has been created, the nativeEMSName may be changed by the NMS, if the
   * EMS supports this functionality, using the setNativeEMSName operation.</p>
   *
   * @parm globaldefs::NamingAttributes_T objectName
   * @parm string nativeEMSName
   * @raises globaldefs::ProcessingFailureException<dir>
   * EXCPT_NOT_IMPLEMENTED - If EMS does not support this service<br>
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_INVALID_INPUT - Raised when objectName is incorrectly formed<br>
   * EXCPT_ENTITY_NOT_FOUND - Raised when objectName references object which does not exist<br>
   * EXCPT_NE_COMM_LOSS - Raised when communications to managedElement is lost
   * </dir>
   **/
  void setNativeEMSName (hoshen.xsm.lightsoft.corba.globaldefs.NameAndStringValue_T[] objectName, String nativeEMSName) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;

  /**
   * <p>The userLabel is owned by the NMSes.  It is a string assigned by an NMS to an object.
   * The difference between the userLabel and the NamingAttributes name
   * is that the userLabel is an attribute of the objects that 
   * may be "set" by the NMS through well defined interfaces (setUserLabel).</p>
   *
   * <p>When an object is created by an NMS, the NMS specifies the userLabel for the object.</p>
   *
   * <p>When an object is created by the EMS, the EMS sets the userLabel to the nativeEMSName.</p>
   *
   * <p>Once an object is created, the userLabel may only be changed by an NMS through the 
   * setUserLabel operation.</p>
   *
   * @parm globaldefs::NamingAttributes_T objectName: Name of the object for which to change the
   *  userLabel.
   * @parm string userLabel: New user label to assign to the object
   * @parm boolean enforceUniqueness: Specifies whether or not userLabel should be checked for
   *  uniqueness amongst objects of the same class within the EMS.  If true, then the operation
   *  will fail if userLabel is already in use.
   * @raises globaldefs::ProcessingFailureException<dir>
   * EXCPT_NOT_IMPLEMENTED - If EMS does not support this service<br>
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_INVALID_INPUT - Raised when objectName is incorrectly formed<br>
   * EXCPT_ENTITY_NOT_FOUND - Raised when objectName references object which does not exist<br>
   * EXCPT_NE_COMM_LOSS - Raised when communications to managedElement is lost<br>
   * EXCPT_USERLABEL_IN_USE - Raised when the userLabel uniqueness constraint is not met<br>
   * </dir>
   **/
  void setUserLabel (hoshen.xsm.lightsoft.corba.globaldefs.NameAndStringValue_T[] objectName, String userLabel, boolean enforceUniqueness) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;

  /** 
   * <p>This service sets the owner attribute of the specified object.</p>
   *
   * @parm globaldefs::NamingAttributes_T objectName
   * @parm string owner
   * @raises globaldefs::ProcessingFailureException<dir>
   * EXCPT_NOT_IMPLEMENTED - If EMS does not support this service<br>
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure<br>
   * EXCPT_INVALID_INPUT - Raised when objectName is incorrectly formed<br>
   * EXCPT_ENTITY_NOT_FOUND - Raised when objectName references an object
   *  that does not exist<br>
   * EXCPT_NE_COMM_LOSS - Raised when communications to managedElement is lost<br>
   * </dir>
   **/
  void setOwner (hoshen.xsm.lightsoft.corba.globaldefs.NameAndStringValue_T[] objectName, String owner) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;

  /** 
   * <p>This service retrieves the capabilities of the manager.
   * All non-specified capabilities are assumed to be unsupported.</p>
   *
   * @parm CapabilityList_T capabilities
   * @raises globaldefs::ProcessingFailureException:<dir>
   * EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure.
   * </dir>
   **/
  void getCapabilities (hoshen.xsm.lightsoft.corba.common.CapabilityList_THolder capabilities) throws hoshen.xsm.lightsoft.corba.globaldefs.ProcessingFailureException;
} // interface Common_IOperations
