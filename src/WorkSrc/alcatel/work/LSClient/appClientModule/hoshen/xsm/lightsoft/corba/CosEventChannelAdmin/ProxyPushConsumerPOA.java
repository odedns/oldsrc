package hoshen.xsm.lightsoft.corba.CosEventChannelAdmin;


/**
* hoshen/xsm/lightsoft/corba/CosEventChannelAdmin/ProxyPushConsumerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from lightsoft/CosEventChannelAdmin.idl
* 11:11:10 IST יום ראשון 6 נובמבר 2005
*/


/**
    * Interface for a proxy push consumer.
    */
public abstract class ProxyPushConsumerPOA extends org.omg.PortableServer.Servant
                implements hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.ProxyPushConsumerOperations, org.omg.CORBA.portable.InvokeHandler
{

  public hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.ProxyPushConsumer _this() {
     return hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.ProxyPushConsumerHelper.narrow(
        super._this_object());
  }

  public hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.ProxyPushConsumer _this(org.omg.CORBA.ORB orb) {
     return hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.ProxyPushConsumerHelper.narrow(
        super._this_object(orb));
  }

  public String[] _all_interfaces(
     org.omg.PortableServer.POA poa,
     byte[] objectId) {
         return (String[])__ids.clone();
  }

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosEventChannelAdmin/ProxyPushConsumer:1.0", 
    "IDL:omg.org/CosEventComm/PushConsumer:1.0"};

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("connect_push_supplier", new java.lang.Integer (0));
    _methods.put ("push", new java.lang.Integer (1));
    _methods.put ("disconnect_push_consumer", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
       * Connect a push supplier to this proxy.
       * @parm <code>push_supplier</code> - The <code>PushSupplier</code>
       * object reference.
       * @raises AlreadyConnected If this supplier is already connected.
       */
       case 0:  // CosEventChannelAdmin/ProxyPushConsumer/connect_push_supplier
       {
         try {
           hoshen.xsm.lightsoft.corba.CosEventComm.PushSupplier push_supplier = hoshen.xsm.lightsoft.corba.CosEventComm.PushSupplierHelper.read (in);
           this.connect_push_supplier (push_supplier);
           out = $rh.createReply();
         } catch (hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.AlreadyConnected __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosEventChannelAdmin.AlreadyConnectedHelper.write (out, __ex);
         }
         break;
       }


  /**
       * Push an event onto this consumer.
       * @parm <code>data</code> - The event data.
       * @raises Disconnected If this consumer is disconnected.
       */
       case 1:  // CosEventComm/PushConsumer/push
       {
         try {
           org.omg.CORBA.Any data = in.read_any ();
           this.push (data);
           out = $rh.createReply();
         } catch (hoshen.xsm.lightsoft.corba.CosEventComm.Disconnected __ex) {
           out = $rh.createExceptionReply ();
           hoshen.xsm.lightsoft.corba.CosEventComm.DisconnectedHelper.write (out, __ex);
         }
         break;
       }


  /**
       * Disconnect a push consumer.
       */
       case 2:  // CosEventComm/PushConsumer/disconnect_push_consumer
       {
         this.disconnect_push_consumer ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke


} // class _ProxyPushConsumerPOA
