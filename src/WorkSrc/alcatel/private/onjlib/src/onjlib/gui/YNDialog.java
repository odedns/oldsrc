package onjlib.gui;
/*
	A basic extension of the java.awt.Dialog class
 */

import java.awt.*;

public class YNDialog extends Dialog
{
	AnswerListener m_handler;
	public YNDialog(Frame parent, boolean modal)
	{
		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setSize(316,166);
		setVisible(false);
		textLabel.setText("Are You Sure ?");
		add(textLabel);
		textLabel.setFont(new Font("Dialog", Font.BOLD, 12));
		textLabel.setBounds(36,36,241,22);
		yesButton.setLabel("Yes");
		add(yesButton);
		yesButton.setBackground(java.awt.Color.lightGray);
		yesButton.setFont(new Font("Dialog", Font.BOLD, 12));
		yesButton.setBounds(36,96,85,29);
		noButton.setLabel("No");
		add(noButton);
		noButton.setBackground(java.awt.Color.lightGray);
		noButton.setFont(new Font("Dialog", Font.BOLD, 12));
		noButton.setBounds(156,96,85,29);
		setTitle("YesNoDialog");
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		yesButton.addActionListener(lSymAction);
		noButton.addActionListener(lSymAction);
		//}}
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the getInsets
		setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(getInsets().left, getInsets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

	// Used for addNotify check.
	boolean fComponentsAdjusted = false;


	public YNDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}


	public void addAnswerListener(AnswerListener ai)
	{
		m_handler = ai;
	}

	/**
	 * Shows or hides the component depending on the boolean flag b.
	 * @param b  if true, show the component; otherwise, hide the component.
	 * @see java.awt.Component#isVisible
	 */
	public void setVisible(boolean b)
	{
		if(b)
		{
			Rectangle bounds = getParent().getBounds();
			Rectangle abounds = getBounds();

			setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
				 bounds.y + (bounds.height - abounds.height)/2);
		}
		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.Label textLabel = new java.awt.Label();
	java.awt.Button yesButton = new java.awt.Button();
	java.awt.Button noButton = new java.awt.Button();
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == YNDialog.this)
				Dialog1_WindowClosing(event);
		}
	}

	void Dialog1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == yesButton)
				yesButton_ActionPerformed(event);
			else if (object == noButton)
				noButton_ActionPerformed(event);
		}
	}

	void yesButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		System.out.println("yes pressed");
		dispose();
		m_handler.doAction(AnswerListener.ANSWER_YES);
	}

	void noButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		System.out.println("no pressed");

		dispose();
		m_handler.doAction(AnswerListener.ANSWER_NO);

	}

	public static void main(String argv[])
	{
		Frame f = new Frame();
		YNHandler ynHandler = new YNHandler();

		YNDialog ynd = new YNDialog(f,"YNDialog",false);
		ynd.addAnswerListener(ynHandler);
		ynd.show();
		System.out.println("after show");


	}
}
