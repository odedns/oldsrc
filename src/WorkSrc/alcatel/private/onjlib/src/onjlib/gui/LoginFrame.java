package onjlib.gui;
/*
	A basic extension of the java.awt.Frame class
 */

import java.awt.*;

/**
 * a login dialog frame.
 * displays a login dialog frame, the user is authenticated
 * according to the login authenticator interface passed.
 */
public class LoginFrame extends Frame
{
	LoginAuthenticator m_lHandler;

	/**
	 * default constructor
	 */
	public LoginFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setBackground(java.awt.Color.lightGray);
		setSize(385,234);
		setVisible(false);
		userLabel.setText("User:");
		add(userLabel);
		userLabel.setFont(new Font("Dialog", Font.BOLD, 12));
		userLabel.setBounds(36,36,120,28);
		passLabel.setText("Password:");
		add(passLabel);
		passLabel.setFont(new Font("Dialog", Font.BOLD, 12));
		passLabel.setBounds(36,84,120,28);
		add(userField);
		userField.setFont(new Font("Dialog", Font.BOLD, 12));
		userField.setBounds(168,36,156,28);
		passField.setEchoChar('*');
		add(passField);
		passField.setFont(new Font("Dialog", Font.BOLD, 12));
		passField.setBounds(168,84,156,28);
		okButton.setActionCommand("button");
		okButton.setLabel("OK");
		add(okButton);
		okButton.setFont(new Font("Dialog", Font.BOLD, 12));
		okButton.setBounds(36,156,115,38);
		cancelButton.setActionCommand("button");
		cancelButton.setLabel("Cancel");
		add(cancelButton);
		cancelButton.setFont(new Font("Dialog", Font.BOLD, 12));
		cancelButton.setBounds(228,156,115,38);
		setTitle("LoginFrame");
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		okButton.addActionListener(lSymAction);
		cancelButton.addActionListener(lSymAction);
		//}}
	}

	/**
	 * creates a login frame with a title.
	 * @param title the title of the frame.
	 */
	public LoginFrame(String title)
	{
		this();
		setTitle(title);
	}

	/**
	 * creates a login frame with a title and a loginAuthenticator
	 * object to use for authenticating the user.
	 * @param handler LoginAuthenticator handler.
	 * @param title the title of the frame.
	 **/
	public LoginFrame(String title, LoginAuthenticator handler)
	{
		this(title);
		m_lHandler = handler;
	}

	public void addLoginAuthenticator(LoginAuthenticator handler)
	{
		m_lHandler = handler;
	}
	/**
	 * show the frame.
	 */
	public synchronized void show()
	{
		setLocation(50, 50);
		super.show();
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the getInsets
		setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(getInsets().left, getInsets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

	// Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.Label userLabel = new java.awt.Label();
	java.awt.Label passLabel = new java.awt.Label();
	java.awt.TextField userField = new java.awt.TextField();
	java.awt.TextField passField = new java.awt.TextField();
	java.awt.Button okButton = new java.awt.Button();
	java.awt.Button cancelButton = new java.awt.Button();
	//}}

	//{{DECLARE_MENUS
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == LoginFrame.this)
				Frame1_WindowClosing(event);
		}
	}

	void Frame1_WindowClosing(java.awt.event.WindowEvent event)
	{
		hide();		 // hide the Frame
	}




	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == okButton)
				okButton_Action(event);
			else if (object == cancelButton)
				cancelButton_Action(event);
		}
	}

	void okButton_Action(java.awt.event.ActionEvent event)
	{
		String user = userField.getText();
		String pass = passField.getText();

		System.out.println("OK Pressed");

		System.out.println("user = " + user +
			"password = " + pass);
		if(m_lHandler.authenticate(user, pass)) {
			setVisible(false);
			dispose();
		} else {
			m_lHandler.onFailedAuthentication(user,pass);
		}
	}

	void cancelButton_Action(java.awt.event.ActionEvent event)
	{

		System.out.println("Cancel Pressed");
		setVisible(false);
		dispose();
	}

	/* main test driver */
	public static void main(String argv[])
	{
		MyLoginAuth myAuth = new MyLoginAuth();
		LoginFrame ld = new LoginFrame("test",myAuth);

		ld.show();


	}
}
