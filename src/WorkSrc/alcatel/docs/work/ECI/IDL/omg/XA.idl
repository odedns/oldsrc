#ifndef _XA_IDL_ 
#define _XA_IDL_ 

#pragma IT_SystemSpecification

#include <omg/CosTransactions.idl>
 
#pragma prefix "omg.org" 

#pragma IT_BeginCBESpecific Cplusplus          			          "@@\
@include <orbix_sys/xa.h>"    

module XA 
{ 
    native XASwitch; 
#pragma IT_BeginNativeDecl XASwitch Cplusplus                             "@@\
@in const xa_switch_t&"

    typedef short ThreadModel; 
    const ThreadModel PROCESS = 0; 
    const ThreadModel THREAD  = 1; 

    local interface CurrentConnection 
    { 
        void 
        start(                                   // xa_start(TMNOFLAGS) or xa_start(TMJOIN) 
             in CosTransactions::Coordinator tx, 
             in CosTransactions::otid_t      otid 
        ); 

        void 
        suspend(                                 // xa_end(TMSUSPEND) 
             in CosTransactions::Coordinator tx, 
             in CosTransactions::otid_t      otid 
        ); 

        void resume(                             // xa_start(TMRESUME) 
             in CosTransactions::Coordinator tx, 
             in CosTransactions::otid_t      otid 
        ); 

        void end(                                // xa_end(TMSUCCESS) or xa_end(TMFAIL) 
             in CosTransactions::Coordinator tx, 
             in CosTransactions::otid_t      otid, 
             in boolean                      success 
        ); 

        ThreadModel thread_model(); 
        long        rmid(); 

    }; 

    interface BeforeCompletionCallback 
    { 
        void 
        before_completion( 
            in CosTransactions::Coordinator tx, 
            in CosTransactions::otid_t      otid, 
            in boolean                      success 
        ); 
    }; 

    interface ResourceManager 
    { 
        unsigned long 
        register_before_completion_callback(in BeforeCompletionCallback bcc); 

        void 
        unregister_before_completion_callback(in unsigned long key); 
    }; 
  

    local interface Connector 
    { 
        ResourceManager 
        create_resource_manager( 
            in string                      resource_manager_name, 
            in XASwitch                    xa_switch, 
            in string                      open_string, 
            in string                      close_string, 
            in ThreadModel                 thread_model, 
            in boolean                     automatic_association,
	    in boolean                     dynamic_registration_optimization,
            out CurrentConnection          current_connection 
        ); 

        CurrentConnection 
        connect_to_resource_manager( 
            in ResourceManager             rm, 
            in XASwitch                    xa_switch, 
            in string                      open_string, 
            in string                      close_string, 
            in ThreadModel                 thread_model,
            in boolean                     automatic_association,
	    in boolean                     dynamic_registration_optimization
        ); 
    }; 

}; 

#endif  /*!_XA_IDL_*/ 





